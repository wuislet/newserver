// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgBase.proto

package packet.msgbase;

public final class MsgBase {
  private MsgBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code packet.msgbase.PacketType}
   */
  public enum PacketType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Dump = 1;</code>
     *
     * <pre>
     *存快照，调试用
     * </pre>
     */
    Dump(0, 1),
    /**
     * <code>HEARTBEAT = 1001;</code>
     *
     * <pre>
     ***********帐号相关*********&#47;/
     * </pre>
     */
    HEARTBEAT(1, 1001),
    /**
     * <code>LoginRequest = 1002;</code>
     *
     * <pre>
     *登录
     * </pre>
     */
    LoginRequest(2, 1002),
    /**
     * <code>AuthRequest = 1003;</code>
     *
     * <pre>
     *会话认证
     * </pre>
     */
    AuthRequest(3, 1003),
    /**
     * <code>GlobalMsgSyn = 1004;</code>
     *
     * <pre>
     *全局信息提示
     * </pre>
     */
    GlobalMsgSyn(4, 1004),
    /**
     * <code>VistorRegisterRequest = 1005;</code>
     *
     * <pre>
     *游客注册
     * </pre>
     */
    VistorRegisterRequest(5, 1005),
    /**
     * <code>VistorRegisterResponse = 1006;</code>
     */
    VistorRegisterResponse(6, 1006),
    /**
     * <code>RegisterRequest = 1007;</code>
     *
     * <pre>
     *普通帐号注册
     * </pre>
     */
    RegisterRequest(7, 1007),
    /**
     * <code>RegisterResponse = 1008;</code>
     */
    RegisterResponse(8, 1008),
    /**
     * <code>UserInfoSyn = 1009;</code>
     *
     * <pre>
     *用户属性发生变化
     * </pre>
     */
    UserInfoSyn(9, 1009),
    /**
     * <code>ModifyUserInfoRequest = 1010;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    ModifyUserInfoRequest(10, 1010),
    /**
     * <code>EnrollRequest = 2001;</code>
     *
     * <pre>
     ***********游戏相关*********&#47;/
     * </pre>
     */
    EnrollRequest(11, 2001),
    /**
     * <code>ReadyRequest = 2002;</code>
     *
     * <pre>
     *准备游戏
     * </pre>
     */
    ReadyRequest(12, 2002),
    /**
     * <code>ChangeDeskRequest = 2003;</code>
     *
     * <pre>
     *换桌
     * </pre>
     */
    ChangeDeskRequest(13, 2003),
    /**
     * <code>KickOutSyn = 2004;</code>
     *
     * <pre>
     *强制下线, 同一个帐号不能多处登录、房主踢人
     * </pre>
     */
    KickOutSyn(14, 2004),
    /**
     * <code>ChatRequest = 2005;</code>
     *
     * <pre>
     *聊天
     * </pre>
     */
    ChatRequest(15, 2005),
    /**
     * <code>Back2HallRequest = 2006;</code>
     *
     * <pre>
     *返回大厅
     * </pre>
     */
    Back2HallRequest(16, 2006),
    /**
     * <code>PlayerGamingSyn = 2007;</code>
     *
     * <pre>
     *推送当前玩家正在游戏的消息
     * </pre>
     */
    PlayerGamingSyn(17, 2007),
    /**
     * <code>PlayerSitSyn = 2008;</code>
     *
     * <pre>
     *有玩家进入桌子
     * </pre>
     */
    PlayerSitSyn(18, 2008),
    /**
     * <code>AwayGameRequest = 2009;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    AwayGameRequest(19, 2009),
    /**
     * <code>PlayerAwaySyn = 2010;</code>
     *
     * <pre>
     *有玩家离开桌子
     * </pre>
     */
    PlayerAwaySyn(20, 2010),
    /**
     * <code>PlayerComebackSyn = 2011;</code>
     *
     * <pre>
     *玩家回来
     * </pre>
     */
    PlayerComebackSyn(21, 2011),
    /**
     * <code>PlayerOfflineSyn = 2012;</code>
     *
     * <pre>
     *有玩家掉线
     * </pre>
     */
    PlayerOfflineSyn(22, 2012),
    /**
     * <code>PlayerReconnectSyn = 2013;</code>
     *
     * <pre>
     *有玩家重连		
     * </pre>
     */
    PlayerReconnectSyn(23, 2013),
    /**
     * <code>ExitGameRequest = 2014;</code>
     *
     * <pre>
     *退出游戏
     * </pre>
     */
    ExitGameRequest(24, 2014),
    /**
     * <code>PlayerExitSyn = 2015;</code>
     *
     * <pre>
     *有玩家退出游戏
     * </pre>
     */
    PlayerExitSyn(25, 2015),
    /**
     * <code>ReadySyn = 2016;</code>
     *
     * <pre>
     *告知客户端某玩家已经准备好
     * </pre>
     */
    ReadySyn(26, 2016),
    /**
     * <code>GameStartSyn = 2017;</code>
     *
     * <pre>
     *告知客户端所有人都准备好了
     * </pre>
     */
    GameStartSyn(27, 2017),
    /**
     * <code>GameStartDealCardSyn = 2118;</code>
     *
     * <pre>
     *告知客户端开始发牌
     * </pre>
     */
    GameStartDealCardSyn(28, 2118),
    /**
     * <code>GameStartPlaySyn = 2119;</code>
     *
     * <pre>
     *告知客户端游戏已开始
     * </pre>
     */
    GameStartPlaySyn(29, 2119),
    /**
     * <code>CreateVipRoomRequest = 2018;</code>
     *
     * <pre>
     *创建vip房间
     * </pre>
     */
    CreateVipRoomRequest(30, 2018),
    /**
     * <code>EnterVipRoomRequest = 2019;</code>
     *
     * <pre>
     *加入vip房间
     * </pre>
     */
    EnterVipRoomRequest(31, 2019),
    /**
     * <code>KickPlayerRequest = 2020;</code>
     *
     * <pre>
     *vip房间踢人
     * </pre>
     */
    KickPlayerRequest(32, 2020),
    /**
     * <code>VipRoomListReuqest = 2021;</code>
     *
     * <pre>
     *请求拉取vip房间列表
     * </pre>
     */
    VipRoomListReuqest(33, 2021),
    /**
     * <code>VipRoomListSyn = 2022;</code>
     *
     * <pre>
     *推送vip房间列表
     * </pre>
     */
    VipRoomListSyn(34, 2022),
    /**
     * <code>DismissVipRoomRequest = 2023;</code>
     *
     * <pre>
     *解散vip房间	
     * </pre>
     */
    DismissVipRoomRequest(35, 2023),
    /**
     * <code>GameChatMsgRequest = 2024;</code>
     *
     * <pre>
     *聊天信息
     * </pre>
     */
    GameChatMsgRequest(36, 2024),
    /**
     * <code>GameChatMsgSyn = 2025;</code>
     */
    GameChatMsgSyn(37, 2025),
    /**
     * <code>HangupRequest = 2026;</code>
     */
    HangupRequest(38, 2026),
    /**
     * <code>HangupSyn = 2027;</code>
     */
    HangupSyn(39, 2027),
    /**
     * <code>CancelHangupRequest = 2028;</code>
     */
    CancelHangupRequest(40, 2028),
    /**
     * <code>DeskDestorySyn = 2029;</code>
     */
    DeskDestorySyn(41, 2029),
    /**
     * <code>LogoutSyn = 2030;</code>
     */
    LogoutSyn(42, 2030),
    /**
     * <code>DissmissVoteSyn = 2031;</code>
     */
    DissmissVoteSyn(43, 2031),
    /**
     * <code>PlayerGamingSynInquire = 2032;</code>
     *
     * <pre>
     *查询是否有进行中的游戏
     * </pre>
     */
    PlayerGamingSynInquire(44, 2032),
    /**
     * <code>BackGameRequest = 2033;</code>
     *
     * <pre>
     *返回游戏
     * </pre>
     */
    BackGameRequest(45, 2033),
    /**
     * <code>GameOperation = 3001;</code>
     *
     * <pre>
     ***********游戏逻辑相关*********&#47;/
     * </pre>
     */
    GameOperation(46, 3001),
    /**
     * <code>ReadMailMsgRequest = 4001;</code>
     *
     * <pre>
     ***********消息相关*********&#47;/
     * </pre>
     */
    ReadMailMsgRequest(47, 4001),
    /**
     * <code>MarqueeMsgSyn = 4002;</code>
     *
     * <pre>
     *推送跑马灯消息	
     * </pre>
     */
    MarqueeMsgSyn(48, 4002),
    /**
     * <code>NewMailMsgSyn = 4005;</code>
     */
    NewMailMsgSyn(49, 4005),
    /**
     * <code>ReceiveMailAttachRequest = 4006;</code>
     */
    ReceiveMailAttachRequest(50, 4006),
    /**
     * <code>ActAndNoticeMsgSyn = 4008;</code>
     *
     * <pre>
     *活动与公告
     * </pre>
     */
    ActAndNoticeMsgSyn(51, 4008),
    /**
     * <code>RoomResultRequest = 5001;</code>
     *
     * <pre>
     ***********战绩相关*********&#47;/
     * </pre>
     */
    RoomResultRequest(52, 5001),
    /**
     * <code>RoomResultResponse = 5002;</code>
     *
     * <pre>
     *战绩列表
     * </pre>
     */
    RoomResultResponse(53, 5002),
    /**
     * <code>GenOrderRequest = 6001;</code>
     *
     * <pre>
     ***********商城相关*********&#47;/
     * </pre>
     */
    GenOrderRequest(54, 6001),
    /**
     * <code>GenOrderResponse = 6002;</code>
     *
     * <pre>
     *生成订单
     * </pre>
     */
    GenOrderResponse(55, 6002),
    /**
     * <code>ConfirmOrderRequest = 6003;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    ConfirmOrderRequest(56, 6003),
    /**
     * <code>ConfirmOrderReqsponse = 6004;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    ConfirmOrderReqsponse(57, 6004),
    /**
     * <code>MallProductRequest = 6005;</code>
     *
     * <pre>
     *请求商品列表
     * </pre>
     */
    MallProductRequest(58, 6005),
    /**
     * <code>MallProductResponse = 6006;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    MallProductResponse(59, 6006),
    /**
     * <code>RankRequest = 7001;</code>
     *
     * <pre>
     ***********排行榜*********&#47;/
     * </pre>
     */
    RankRequest(60, 7001),
    /**
     * <code>RankSyn = 7002;</code>
     *
     * <pre>
     *排行榜数据返回
     * </pre>
     */
    RankSyn(61, 7002),
    /**
     * <code>RoomConfigRequest = 8001;</code>
     *
     * <pre>
     ***********配置相关************&#47;/
     * </pre>
     */
    RoomConfigRequest(62, 8001),
    /**
     * <code>RoomConfigResponse = 8002;</code>
     */
    RoomConfigResponse(63, 8002),
    /**
     * <code>ServerChangeSyn = 8003;</code>
     */
    ServerChangeSyn(64, 8003),
    ;

    /**
     * <code>Dump = 1;</code>
     *
     * <pre>
     *存快照，调试用
     * </pre>
     */
    public static final int Dump_VALUE = 1;
    /**
     * <code>HEARTBEAT = 1001;</code>
     *
     * <pre>
     ***********帐号相关*********&#47;/
     * </pre>
     */
    public static final int HEARTBEAT_VALUE = 1001;
    /**
     * <code>LoginRequest = 1002;</code>
     *
     * <pre>
     *登录
     * </pre>
     */
    public static final int LoginRequest_VALUE = 1002;
    /**
     * <code>AuthRequest = 1003;</code>
     *
     * <pre>
     *会话认证
     * </pre>
     */
    public static final int AuthRequest_VALUE = 1003;
    /**
     * <code>GlobalMsgSyn = 1004;</code>
     *
     * <pre>
     *全局信息提示
     * </pre>
     */
    public static final int GlobalMsgSyn_VALUE = 1004;
    /**
     * <code>VistorRegisterRequest = 1005;</code>
     *
     * <pre>
     *游客注册
     * </pre>
     */
    public static final int VistorRegisterRequest_VALUE = 1005;
    /**
     * <code>VistorRegisterResponse = 1006;</code>
     */
    public static final int VistorRegisterResponse_VALUE = 1006;
    /**
     * <code>RegisterRequest = 1007;</code>
     *
     * <pre>
     *普通帐号注册
     * </pre>
     */
    public static final int RegisterRequest_VALUE = 1007;
    /**
     * <code>RegisterResponse = 1008;</code>
     */
    public static final int RegisterResponse_VALUE = 1008;
    /**
     * <code>UserInfoSyn = 1009;</code>
     *
     * <pre>
     *用户属性发生变化
     * </pre>
     */
    public static final int UserInfoSyn_VALUE = 1009;
    /**
     * <code>ModifyUserInfoRequest = 1010;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    public static final int ModifyUserInfoRequest_VALUE = 1010;
    /**
     * <code>EnrollRequest = 2001;</code>
     *
     * <pre>
     ***********游戏相关*********&#47;/
     * </pre>
     */
    public static final int EnrollRequest_VALUE = 2001;
    /**
     * <code>ReadyRequest = 2002;</code>
     *
     * <pre>
     *准备游戏
     * </pre>
     */
    public static final int ReadyRequest_VALUE = 2002;
    /**
     * <code>ChangeDeskRequest = 2003;</code>
     *
     * <pre>
     *换桌
     * </pre>
     */
    public static final int ChangeDeskRequest_VALUE = 2003;
    /**
     * <code>KickOutSyn = 2004;</code>
     *
     * <pre>
     *强制下线, 同一个帐号不能多处登录、房主踢人
     * </pre>
     */
    public static final int KickOutSyn_VALUE = 2004;
    /**
     * <code>ChatRequest = 2005;</code>
     *
     * <pre>
     *聊天
     * </pre>
     */
    public static final int ChatRequest_VALUE = 2005;
    /**
     * <code>Back2HallRequest = 2006;</code>
     *
     * <pre>
     *返回大厅
     * </pre>
     */
    public static final int Back2HallRequest_VALUE = 2006;
    /**
     * <code>PlayerGamingSyn = 2007;</code>
     *
     * <pre>
     *推送当前玩家正在游戏的消息
     * </pre>
     */
    public static final int PlayerGamingSyn_VALUE = 2007;
    /**
     * <code>PlayerSitSyn = 2008;</code>
     *
     * <pre>
     *有玩家进入桌子
     * </pre>
     */
    public static final int PlayerSitSyn_VALUE = 2008;
    /**
     * <code>AwayGameRequest = 2009;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    public static final int AwayGameRequest_VALUE = 2009;
    /**
     * <code>PlayerAwaySyn = 2010;</code>
     *
     * <pre>
     *有玩家离开桌子
     * </pre>
     */
    public static final int PlayerAwaySyn_VALUE = 2010;
    /**
     * <code>PlayerComebackSyn = 2011;</code>
     *
     * <pre>
     *玩家回来
     * </pre>
     */
    public static final int PlayerComebackSyn_VALUE = 2011;
    /**
     * <code>PlayerOfflineSyn = 2012;</code>
     *
     * <pre>
     *有玩家掉线
     * </pre>
     */
    public static final int PlayerOfflineSyn_VALUE = 2012;
    /**
     * <code>PlayerReconnectSyn = 2013;</code>
     *
     * <pre>
     *有玩家重连		
     * </pre>
     */
    public static final int PlayerReconnectSyn_VALUE = 2013;
    /**
     * <code>ExitGameRequest = 2014;</code>
     *
     * <pre>
     *退出游戏
     * </pre>
     */
    public static final int ExitGameRequest_VALUE = 2014;
    /**
     * <code>PlayerExitSyn = 2015;</code>
     *
     * <pre>
     *有玩家退出游戏
     * </pre>
     */
    public static final int PlayerExitSyn_VALUE = 2015;
    /**
     * <code>ReadySyn = 2016;</code>
     *
     * <pre>
     *告知客户端某玩家已经准备好
     * </pre>
     */
    public static final int ReadySyn_VALUE = 2016;
    /**
     * <code>GameStartSyn = 2017;</code>
     *
     * <pre>
     *告知客户端所有人都准备好了
     * </pre>
     */
    public static final int GameStartSyn_VALUE = 2017;
    /**
     * <code>GameStartDealCardSyn = 2118;</code>
     *
     * <pre>
     *告知客户端开始发牌
     * </pre>
     */
    public static final int GameStartDealCardSyn_VALUE = 2118;
    /**
     * <code>GameStartPlaySyn = 2119;</code>
     *
     * <pre>
     *告知客户端游戏已开始
     * </pre>
     */
    public static final int GameStartPlaySyn_VALUE = 2119;
    /**
     * <code>CreateVipRoomRequest = 2018;</code>
     *
     * <pre>
     *创建vip房间
     * </pre>
     */
    public static final int CreateVipRoomRequest_VALUE = 2018;
    /**
     * <code>EnterVipRoomRequest = 2019;</code>
     *
     * <pre>
     *加入vip房间
     * </pre>
     */
    public static final int EnterVipRoomRequest_VALUE = 2019;
    /**
     * <code>KickPlayerRequest = 2020;</code>
     *
     * <pre>
     *vip房间踢人
     * </pre>
     */
    public static final int KickPlayerRequest_VALUE = 2020;
    /**
     * <code>VipRoomListReuqest = 2021;</code>
     *
     * <pre>
     *请求拉取vip房间列表
     * </pre>
     */
    public static final int VipRoomListReuqest_VALUE = 2021;
    /**
     * <code>VipRoomListSyn = 2022;</code>
     *
     * <pre>
     *推送vip房间列表
     * </pre>
     */
    public static final int VipRoomListSyn_VALUE = 2022;
    /**
     * <code>DismissVipRoomRequest = 2023;</code>
     *
     * <pre>
     *解散vip房间	
     * </pre>
     */
    public static final int DismissVipRoomRequest_VALUE = 2023;
    /**
     * <code>GameChatMsgRequest = 2024;</code>
     *
     * <pre>
     *聊天信息
     * </pre>
     */
    public static final int GameChatMsgRequest_VALUE = 2024;
    /**
     * <code>GameChatMsgSyn = 2025;</code>
     */
    public static final int GameChatMsgSyn_VALUE = 2025;
    /**
     * <code>HangupRequest = 2026;</code>
     */
    public static final int HangupRequest_VALUE = 2026;
    /**
     * <code>HangupSyn = 2027;</code>
     */
    public static final int HangupSyn_VALUE = 2027;
    /**
     * <code>CancelHangupRequest = 2028;</code>
     */
    public static final int CancelHangupRequest_VALUE = 2028;
    /**
     * <code>DeskDestorySyn = 2029;</code>
     */
    public static final int DeskDestorySyn_VALUE = 2029;
    /**
     * <code>LogoutSyn = 2030;</code>
     */
    public static final int LogoutSyn_VALUE = 2030;
    /**
     * <code>DissmissVoteSyn = 2031;</code>
     */
    public static final int DissmissVoteSyn_VALUE = 2031;
    /**
     * <code>PlayerGamingSynInquire = 2032;</code>
     *
     * <pre>
     *查询是否有进行中的游戏
     * </pre>
     */
    public static final int PlayerGamingSynInquire_VALUE = 2032;
    /**
     * <code>BackGameRequest = 2033;</code>
     *
     * <pre>
     *返回游戏
     * </pre>
     */
    public static final int BackGameRequest_VALUE = 2033;
    /**
     * <code>GameOperation = 3001;</code>
     *
     * <pre>
     ***********游戏逻辑相关*********&#47;/
     * </pre>
     */
    public static final int GameOperation_VALUE = 3001;
    /**
     * <code>ReadMailMsgRequest = 4001;</code>
     *
     * <pre>
     ***********消息相关*********&#47;/
     * </pre>
     */
    public static final int ReadMailMsgRequest_VALUE = 4001;
    /**
     * <code>MarqueeMsgSyn = 4002;</code>
     *
     * <pre>
     *推送跑马灯消息	
     * </pre>
     */
    public static final int MarqueeMsgSyn_VALUE = 4002;
    /**
     * <code>NewMailMsgSyn = 4005;</code>
     */
    public static final int NewMailMsgSyn_VALUE = 4005;
    /**
     * <code>ReceiveMailAttachRequest = 4006;</code>
     */
    public static final int ReceiveMailAttachRequest_VALUE = 4006;
    /**
     * <code>ActAndNoticeMsgSyn = 4008;</code>
     *
     * <pre>
     *活动与公告
     * </pre>
     */
    public static final int ActAndNoticeMsgSyn_VALUE = 4008;
    /**
     * <code>RoomResultRequest = 5001;</code>
     *
     * <pre>
     ***********战绩相关*********&#47;/
     * </pre>
     */
    public static final int RoomResultRequest_VALUE = 5001;
    /**
     * <code>RoomResultResponse = 5002;</code>
     *
     * <pre>
     *战绩列表
     * </pre>
     */
    public static final int RoomResultResponse_VALUE = 5002;
    /**
     * <code>GenOrderRequest = 6001;</code>
     *
     * <pre>
     ***********商城相关*********&#47;/
     * </pre>
     */
    public static final int GenOrderRequest_VALUE = 6001;
    /**
     * <code>GenOrderResponse = 6002;</code>
     *
     * <pre>
     *生成订单
     * </pre>
     */
    public static final int GenOrderResponse_VALUE = 6002;
    /**
     * <code>ConfirmOrderRequest = 6003;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    public static final int ConfirmOrderRequest_VALUE = 6003;
    /**
     * <code>ConfirmOrderReqsponse = 6004;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    public static final int ConfirmOrderReqsponse_VALUE = 6004;
    /**
     * <code>MallProductRequest = 6005;</code>
     *
     * <pre>
     *请求商品列表
     * </pre>
     */
    public static final int MallProductRequest_VALUE = 6005;
    /**
     * <code>MallProductResponse = 6006;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    public static final int MallProductResponse_VALUE = 6006;
    /**
     * <code>RankRequest = 7001;</code>
     *
     * <pre>
     ***********排行榜*********&#47;/
     * </pre>
     */
    public static final int RankRequest_VALUE = 7001;
    /**
     * <code>RankSyn = 7002;</code>
     *
     * <pre>
     *排行榜数据返回
     * </pre>
     */
    public static final int RankSyn_VALUE = 7002;
    /**
     * <code>RoomConfigRequest = 8001;</code>
     *
     * <pre>
     ***********配置相关************&#47;/
     * </pre>
     */
    public static final int RoomConfigRequest_VALUE = 8001;
    /**
     * <code>RoomConfigResponse = 8002;</code>
     */
    public static final int RoomConfigResponse_VALUE = 8002;
    /**
     * <code>ServerChangeSyn = 8003;</code>
     */
    public static final int ServerChangeSyn_VALUE = 8003;


    public final int getNumber() { return value; }

    public static PacketType valueOf(int value) {
      switch (value) {
        case 1: return Dump;
        case 1001: return HEARTBEAT;
        case 1002: return LoginRequest;
        case 1003: return AuthRequest;
        case 1004: return GlobalMsgSyn;
        case 1005: return VistorRegisterRequest;
        case 1006: return VistorRegisterResponse;
        case 1007: return RegisterRequest;
        case 1008: return RegisterResponse;
        case 1009: return UserInfoSyn;
        case 1010: return ModifyUserInfoRequest;
        case 2001: return EnrollRequest;
        case 2002: return ReadyRequest;
        case 2003: return ChangeDeskRequest;
        case 2004: return KickOutSyn;
        case 2005: return ChatRequest;
        case 2006: return Back2HallRequest;
        case 2007: return PlayerGamingSyn;
        case 2008: return PlayerSitSyn;
        case 2009: return AwayGameRequest;
        case 2010: return PlayerAwaySyn;
        case 2011: return PlayerComebackSyn;
        case 2012: return PlayerOfflineSyn;
        case 2013: return PlayerReconnectSyn;
        case 2014: return ExitGameRequest;
        case 2015: return PlayerExitSyn;
        case 2016: return ReadySyn;
        case 2017: return GameStartSyn;
        case 2118: return GameStartDealCardSyn;
        case 2119: return GameStartPlaySyn;
        case 2018: return CreateVipRoomRequest;
        case 2019: return EnterVipRoomRequest;
        case 2020: return KickPlayerRequest;
        case 2021: return VipRoomListReuqest;
        case 2022: return VipRoomListSyn;
        case 2023: return DismissVipRoomRequest;
        case 2024: return GameChatMsgRequest;
        case 2025: return GameChatMsgSyn;
        case 2026: return HangupRequest;
        case 2027: return HangupSyn;
        case 2028: return CancelHangupRequest;
        case 2029: return DeskDestorySyn;
        case 2030: return LogoutSyn;
        case 2031: return DissmissVoteSyn;
        case 2032: return PlayerGamingSynInquire;
        case 2033: return BackGameRequest;
        case 3001: return GameOperation;
        case 4001: return ReadMailMsgRequest;
        case 4002: return MarqueeMsgSyn;
        case 4005: return NewMailMsgSyn;
        case 4006: return ReceiveMailAttachRequest;
        case 4008: return ActAndNoticeMsgSyn;
        case 5001: return RoomResultRequest;
        case 5002: return RoomResultResponse;
        case 6001: return GenOrderRequest;
        case 6002: return GenOrderResponse;
        case 6003: return ConfirmOrderRequest;
        case 6004: return ConfirmOrderReqsponse;
        case 6005: return MallProductRequest;
        case 6006: return MallProductResponse;
        case 7001: return RankRequest;
        case 7002: return RankSyn;
        case 8001: return RoomConfigRequest;
        case 8002: return RoomConfigResponse;
        case 8003: return ServerChangeSyn;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PacketType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PacketType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PacketType>() {
            public PacketType findValueByNumber(int number) {
              return PacketType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return packet.msgbase.MsgBase.getDescriptor().getEnumTypes().get(0);
    }

    private static final PacketType[] VALUES = values();

    public static PacketType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PacketType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:packet.msgbase.PacketType)
  }

  public interface PacketBaseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .packet.msgbase.PacketType packetType = 1;
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    boolean hasPacketType();
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    packet.msgbase.MsgBase.PacketType getPacketType();

    // optional sint32 code = 2;
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    boolean hasCode();
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    int getCode();

    // optional string msg = 3;
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional bytes data = 4;
    /**
     * <code>optional bytes data = 4;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code packet.msgbase.PacketBase}
   *
   * <pre>
   *消息头固定4个字节 
   * </pre>
   */
  public static final class PacketBase extends
      com.google.protobuf.GeneratedMessage
      implements PacketBaseOrBuilder {
    // Use PacketBase.newBuilder() to construct.
    private PacketBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PacketBase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PacketBase defaultInstance;
    public static PacketBase getDefaultInstance() {
      return defaultInstance;
    }

    public PacketBase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PacketBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              packet.msgbase.MsgBase.PacketType value = packet.msgbase.MsgBase.PacketType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              code_ = input.readSInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              msg_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.msgbase.MsgBase.PacketBase.class, packet.msgbase.MsgBase.PacketBase.Builder.class);
    }

    public static com.google.protobuf.Parser<PacketBase> PARSER =
        new com.google.protobuf.AbstractParser<PacketBase>() {
      public PacketBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PacketBase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PacketBase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .packet.msgbase.PacketType packetType = 1;
    public static final int PACKETTYPE_FIELD_NUMBER = 1;
    private packet.msgbase.MsgBase.PacketType packetType_;
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    public boolean hasPacketType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    public packet.msgbase.MsgBase.PacketType getPacketType() {
      return packetType_;
    }

    // optional sint32 code = 2;
    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    public int getCode() {
      return code_;
    }

    // optional string msg = 3;
    public static final int MSG_FIELD_NUMBER = 3;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes data = 4;
    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 4;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
      code_ = 0;
      msg_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPacketType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMsgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMsgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.msgbase.MsgBase.PacketBase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.msgbase.PacketBase}
     *
     * <pre>
     *消息头固定4个字节 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.msgbase.MsgBase.PacketBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.msgbase.MsgBase.PacketBase.class, packet.msgbase.MsgBase.PacketBase.Builder.class);
      }

      // Construct using packet.msgbase.MsgBase.PacketBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
      }

      public packet.msgbase.MsgBase.PacketBase getDefaultInstanceForType() {
        return packet.msgbase.MsgBase.PacketBase.getDefaultInstance();
      }

      public packet.msgbase.MsgBase.PacketBase build() {
        packet.msgbase.MsgBase.PacketBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.msgbase.MsgBase.PacketBase buildPartial() {
        packet.msgbase.MsgBase.PacketBase result = new packet.msgbase.MsgBase.PacketBase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetType_ = packetType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.msgbase.MsgBase.PacketBase) {
          return mergeFrom((packet.msgbase.MsgBase.PacketBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.msgbase.MsgBase.PacketBase other) {
        if (other == packet.msgbase.MsgBase.PacketBase.getDefaultInstance()) return this;
        if (other.hasPacketType()) {
          setPacketType(other.getPacketType());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000004;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPacketType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.msgbase.MsgBase.PacketBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.msgbase.MsgBase.PacketBase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .packet.msgbase.PacketType packetType = 1;
      private packet.msgbase.MsgBase.PacketType packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public boolean hasPacketType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public packet.msgbase.MsgBase.PacketType getPacketType() {
        return packetType_;
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public Builder setPacketType(packet.msgbase.MsgBase.PacketType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public Builder clearPacketType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
        onChanged();
        return this;
      }

      // optional sint32 code = 2;
      private int code_ ;
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000002;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = 0;
        onChanged();
        return this;
      }

      // optional string msg = 3;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional bytes data = 4;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 4;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.msgbase.PacketBase)
    }

    static {
      defaultInstance = new PacketBase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.msgbase.PacketBase)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_msgbase_PacketBase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_msgbase_PacketBase_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMsgBase.proto\022\016packet.msgbase\"e\n\nPacke" +
      "tBase\022.\n\npacketType\030\001 \002(\0162\032.packet.msgba" +
      "se.PacketType\022\014\n\004code\030\002 \001(\021\022\013\n\003msg\030\003 \001(\t" +
      "\022\014\n\004data\030\004 \001(\014*\260\013\n\nPacketType\022\010\n\004Dump\020\001\022" +
      "\016\n\tHEARTBEAT\020\351\007\022\021\n\014LoginRequest\020\352\007\022\020\n\013Au" +
      "thRequest\020\353\007\022\021\n\014GlobalMsgSyn\020\354\007\022\032\n\025Visto" +
      "rRegisterRequest\020\355\007\022\033\n\026VistorRegisterRes" +
      "ponse\020\356\007\022\024\n\017RegisterRequest\020\357\007\022\025\n\020Regist" +
      "erResponse\020\360\007\022\020\n\013UserInfoSyn\020\361\007\022\032\n\025Modif" +
      "yUserInfoRequest\020\362\007\022\022\n\rEnrollRequest\020\321\017\022",
      "\021\n\014ReadyRequest\020\322\017\022\026\n\021ChangeDeskRequest\020" +
      "\323\017\022\017\n\nKickOutSyn\020\324\017\022\020\n\013ChatRequest\020\325\017\022\025\n" +
      "\020Back2HallRequest\020\326\017\022\024\n\017PlayerGamingSyn\020" +
      "\327\017\022\021\n\014PlayerSitSyn\020\330\017\022\024\n\017AwayGameRequest" +
      "\020\331\017\022\022\n\rPlayerAwaySyn\020\332\017\022\026\n\021PlayerComebac" +
      "kSyn\020\333\017\022\025\n\020PlayerOfflineSyn\020\334\017\022\027\n\022Player" +
      "ReconnectSyn\020\335\017\022\024\n\017ExitGameRequest\020\336\017\022\022\n" +
      "\rPlayerExitSyn\020\337\017\022\r\n\010ReadySyn\020\340\017\022\021\n\014Game" +
      "StartSyn\020\341\017\022\031\n\024GameStartDealCardSyn\020\306\020\022\025" +
      "\n\020GameStartPlaySyn\020\307\020\022\031\n\024CreateVipRoomRe",
      "quest\020\342\017\022\030\n\023EnterVipRoomRequest\020\343\017\022\026\n\021Ki" +
      "ckPlayerRequest\020\344\017\022\027\n\022VipRoomListReuqest" +
      "\020\345\017\022\023\n\016VipRoomListSyn\020\346\017\022\032\n\025DismissVipRo" +
      "omRequest\020\347\017\022\027\n\022GameChatMsgRequest\020\350\017\022\023\n" +
      "\016GameChatMsgSyn\020\351\017\022\022\n\rHangupRequest\020\352\017\022\016" +
      "\n\tHangupSyn\020\353\017\022\030\n\023CancelHangupRequest\020\354\017" +
      "\022\023\n\016DeskDestorySyn\020\355\017\022\016\n\tLogoutSyn\020\356\017\022\024\n" +
      "\017DissmissVoteSyn\020\357\017\022\033\n\026PlayerGamingSynIn" +
      "quire\020\360\017\022\024\n\017BackGameRequest\020\361\017\022\022\n\rGameOp" +
      "eration\020\271\027\022\027\n\022ReadMailMsgRequest\020\241\037\022\022\n\rM",
      "arqueeMsgSyn\020\242\037\022\022\n\rNewMailMsgSyn\020\245\037\022\035\n\030R" +
      "eceiveMailAttachRequest\020\246\037\022\027\n\022ActAndNoti" +
      "ceMsgSyn\020\250\037\022\026\n\021RoomResultRequest\020\211\'\022\027\n\022R" +
      "oomResultResponse\020\212\'\022\024\n\017GenOrderRequest\020" +
      "\361.\022\025\n\020GenOrderResponse\020\362.\022\030\n\023ConfirmOrde" +
      "rRequest\020\363.\022\032\n\025ConfirmOrderReqsponse\020\364.\022" +
      "\027\n\022MallProductRequest\020\365.\022\030\n\023MallProductR" +
      "esponse\020\366.\022\020\n\013RankRequest\020\3316\022\014\n\007RankSyn\020" +
      "\3326\022\026\n\021RoomConfigRequest\020\301>\022\027\n\022RoomConfig" +
      "Response\020\302>\022\024\n\017ServerChangeSyn\020\303>"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_packet_msgbase_PacketBase_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_packet_msgbase_PacketBase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_msgbase_PacketBase_descriptor,
              new java.lang.String[] { "PacketType", "Code", "Msg", "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
