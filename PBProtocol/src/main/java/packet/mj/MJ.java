// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MJ.proto

package packet.mj;

public final class MJ {
  private MJ() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GameOperStartSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint32 bankerPos = 1;
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerPos();
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerPos();

    // required sint32 serviceGold = 2;
    /**
     * <code>required sint32 serviceGold = 2;</code>
     *
     * <pre>
     *台费
     * </pre>
     */
    boolean hasServiceGold();
    /**
     * <code>required sint32 serviceGold = 2;</code>
     *
     * <pre>
     *台费
     * </pre>
     */
    int getServiceGold();

    // repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    java.util.List<packet.mj.MJ.GameOperHandCardSyn> 
        getPlayerHandCardsList();
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    packet.mj.MJ.GameOperHandCardSyn getPlayerHandCards(int index);
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    int getPlayerHandCardsCount();
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    java.util.List<? extends packet.mj.MJ.GameOperHandCardSynOrBuilder> 
        getPlayerHandCardsOrBuilderList();
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    packet.mj.MJ.GameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
        int index);

    // optional sint32 quanNum = 4;
    /**
     * <code>optional sint32 quanNum = 4;</code>
     *
     * <pre>
     *当前圈数   
     * </pre>
     */
    boolean hasQuanNum();
    /**
     * <code>optional sint32 quanNum = 4;</code>
     *
     * <pre>
     *当前圈数   
     * </pre>
     */
    int getQuanNum();

    // optional bool bankerContinue = 5;
    /**
     * <code>optional bool bankerContinue = 5;</code>
     *
     * <pre>
     *是否连庄
     * </pre>
     */
    boolean hasBankerContinue();
    /**
     * <code>optional bool bankerContinue = 5;</code>
     *
     * <pre>
     *是否连庄
     * </pre>
     */
    boolean getBankerContinue();

    // optional sint32 dice1 = 6;
    /**
     * <code>optional sint32 dice1 = 6;</code>
     *
     * <pre>
     *骰子1（1-6的随机数）
     * </pre>
     */
    boolean hasDice1();
    /**
     * <code>optional sint32 dice1 = 6;</code>
     *
     * <pre>
     *骰子1（1-6的随机数）
     * </pre>
     */
    int getDice1();

    // optional sint32 dice2 = 7;
    /**
     * <code>optional sint32 dice2 = 7;</code>
     *
     * <pre>
     *骰子2（1-6的随机数）
     * </pre>
     */
    boolean hasDice2();
    /**
     * <code>optional sint32 dice2 = 7;</code>
     *
     * <pre>
     *骰子2（1-6的随机数）
     * </pre>
     */
    int getDice2();

    // optional sint32 seq = 8;
    /**
     * <code>optional sint32 seq = 8;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 8;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    int getSeq();

    // optional bool reconnect = 9;
    /**
     * <code>optional bool reconnect = 9;</code>
     *
     * <pre>
     *是否是断线重连
     * </pre>
     */
    boolean hasReconnect();
    /**
     * <code>optional bool reconnect = 9;</code>
     *
     * <pre>
     *是否是断线重连
     * </pre>
     */
    boolean getReconnect();

    // optional sint32 cardLeft = 12;
    /**
     * <code>optional sint32 cardLeft = 12;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    boolean hasCardLeft();
    /**
     * <code>optional sint32 cardLeft = 12;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    int getCardLeft();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperStartSyn}
   *
   * <pre>
   *游戏开始 operType=GAMESTART
   * </pre>
   */
  public static final class GameOperStartSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperStartSynOrBuilder {
    // Use GameOperStartSyn.newBuilder() to construct.
    private GameOperStartSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperStartSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperStartSyn defaultInstance;
    public static GameOperStartSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperStartSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperStartSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPos_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serviceGold_ = input.readSInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerHandCards_ = new java.util.ArrayList<packet.mj.MJ.GameOperHandCardSyn>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerHandCards_.add(input.readMessage(packet.mj.MJ.GameOperHandCardSyn.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              quanNum_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              bankerContinue_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              dice1_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              dice2_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              seq_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              reconnect_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              cardLeft_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerHandCards_ = java.util.Collections.unmodifiableList(playerHandCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperStartSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperStartSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperStartSyn.class, packet.mj.MJ.GameOperStartSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperStartSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperStartSyn>() {
      public GameOperStartSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperStartSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperStartSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint32 bankerPos = 1;
    public static final int BANKERPOS_FIELD_NUMBER = 1;
    private int bankerPos_;
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerPos() {
      return bankerPos_;
    }

    // required sint32 serviceGold = 2;
    public static final int SERVICEGOLD_FIELD_NUMBER = 2;
    private int serviceGold_;
    /**
     * <code>required sint32 serviceGold = 2;</code>
     *
     * <pre>
     *台费
     * </pre>
     */
    public boolean hasServiceGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 serviceGold = 2;</code>
     *
     * <pre>
     *台费
     * </pre>
     */
    public int getServiceGold() {
      return serviceGold_;
    }

    // repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;
    public static final int PLAYERHANDCARDS_FIELD_NUMBER = 3;
    private java.util.List<packet.mj.MJ.GameOperHandCardSyn> playerHandCards_;
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public java.util.List<packet.mj.MJ.GameOperHandCardSyn> getPlayerHandCardsList() {
      return playerHandCards_;
    }
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public java.util.List<? extends packet.mj.MJ.GameOperHandCardSynOrBuilder> 
        getPlayerHandCardsOrBuilderList() {
      return playerHandCards_;
    }
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public int getPlayerHandCardsCount() {
      return playerHandCards_.size();
    }
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public packet.mj.MJ.GameOperHandCardSyn getPlayerHandCards(int index) {
      return playerHandCards_.get(index);
    }
    /**
     * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public packet.mj.MJ.GameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
        int index) {
      return playerHandCards_.get(index);
    }

    // optional sint32 quanNum = 4;
    public static final int QUANNUM_FIELD_NUMBER = 4;
    private int quanNum_;
    /**
     * <code>optional sint32 quanNum = 4;</code>
     *
     * <pre>
     *当前圈数   
     * </pre>
     */
    public boolean hasQuanNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 quanNum = 4;</code>
     *
     * <pre>
     *当前圈数   
     * </pre>
     */
    public int getQuanNum() {
      return quanNum_;
    }

    // optional bool bankerContinue = 5;
    public static final int BANKERCONTINUE_FIELD_NUMBER = 5;
    private boolean bankerContinue_;
    /**
     * <code>optional bool bankerContinue = 5;</code>
     *
     * <pre>
     *是否连庄
     * </pre>
     */
    public boolean hasBankerContinue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool bankerContinue = 5;</code>
     *
     * <pre>
     *是否连庄
     * </pre>
     */
    public boolean getBankerContinue() {
      return bankerContinue_;
    }

    // optional sint32 dice1 = 6;
    public static final int DICE1_FIELD_NUMBER = 6;
    private int dice1_;
    /**
     * <code>optional sint32 dice1 = 6;</code>
     *
     * <pre>
     *骰子1（1-6的随机数）
     * </pre>
     */
    public boolean hasDice1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 dice1 = 6;</code>
     *
     * <pre>
     *骰子1（1-6的随机数）
     * </pre>
     */
    public int getDice1() {
      return dice1_;
    }

    // optional sint32 dice2 = 7;
    public static final int DICE2_FIELD_NUMBER = 7;
    private int dice2_;
    /**
     * <code>optional sint32 dice2 = 7;</code>
     *
     * <pre>
     *骰子2（1-6的随机数）
     * </pre>
     */
    public boolean hasDice2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 dice2 = 7;</code>
     *
     * <pre>
     *骰子2（1-6的随机数）
     * </pre>
     */
    public int getDice2() {
      return dice2_;
    }

    // optional sint32 seq = 8;
    public static final int SEQ_FIELD_NUMBER = 8;
    private int seq_;
    /**
     * <code>optional sint32 seq = 8;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 seq = 8;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    // optional bool reconnect = 9;
    public static final int RECONNECT_FIELD_NUMBER = 9;
    private boolean reconnect_;
    /**
     * <code>optional bool reconnect = 9;</code>
     *
     * <pre>
     *是否是断线重连
     * </pre>
     */
    public boolean hasReconnect() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool reconnect = 9;</code>
     *
     * <pre>
     *是否是断线重连
     * </pre>
     */
    public boolean getReconnect() {
      return reconnect_;
    }

    // optional sint32 cardLeft = 12;
    public static final int CARDLEFT_FIELD_NUMBER = 12;
    private int cardLeft_;
    /**
     * <code>optional sint32 cardLeft = 12;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public boolean hasCardLeft() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 cardLeft = 12;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public int getCardLeft() {
      return cardLeft_;
    }

    private void initFields() {
      bankerPos_ = 0;
      serviceGold_ = 0;
      playerHandCards_ = java.util.Collections.emptyList();
      quanNum_ = 0;
      bankerContinue_ = false;
      dice1_ = 0;
      dice2_ = 0;
      seq_ = 0;
      reconnect_ = false;
      cardLeft_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasServiceGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerHandCardsCount(); i++) {
        if (!getPlayerHandCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, bankerPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, serviceGold_);
      }
      for (int i = 0; i < playerHandCards_.size(); i++) {
        output.writeMessage(3, playerHandCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(4, quanNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, bankerContinue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(6, dice1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(7, dice2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, seq_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, reconnect_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(12, cardLeft_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, bankerPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, serviceGold_);
      }
      for (int i = 0; i < playerHandCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, playerHandCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, quanNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, bankerContinue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, dice1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, dice2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, seq_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, reconnect_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(12, cardLeft_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperStartSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperStartSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperStartSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperStartSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperStartSyn}
     *
     * <pre>
     *游戏开始 operType=GAMESTART
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperStartSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperStartSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperStartSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperStartSyn.class, packet.mj.MJ.GameOperStartSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperStartSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerHandCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serviceGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playerHandCardsBuilder_ == null) {
          playerHandCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playerHandCardsBuilder_.clear();
        }
        quanNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bankerContinue_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        dice1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        dice2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        reconnect_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        cardLeft_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperStartSyn_descriptor;
      }

      public packet.mj.MJ.GameOperStartSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperStartSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperStartSyn build() {
        packet.mj.MJ.GameOperStartSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperStartSyn buildPartial() {
        packet.mj.MJ.GameOperStartSyn result = new packet.mj.MJ.GameOperStartSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPos_ = bankerPos_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serviceGold_ = serviceGold_;
        if (playerHandCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            playerHandCards_ = java.util.Collections.unmodifiableList(playerHandCards_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerHandCards_ = playerHandCards_;
        } else {
          result.playerHandCards_ = playerHandCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quanNum_ = quanNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bankerContinue_ = bankerContinue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dice1_ = dice1_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dice2_ = dice2_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.seq_ = seq_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.reconnect_ = reconnect_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cardLeft_ = cardLeft_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperStartSyn) {
          return mergeFrom((packet.mj.MJ.GameOperStartSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperStartSyn other) {
        if (other == packet.mj.MJ.GameOperStartSyn.getDefaultInstance()) return this;
        if (other.hasBankerPos()) {
          setBankerPos(other.getBankerPos());
        }
        if (other.hasServiceGold()) {
          setServiceGold(other.getServiceGold());
        }
        if (playerHandCardsBuilder_ == null) {
          if (!other.playerHandCards_.isEmpty()) {
            if (playerHandCards_.isEmpty()) {
              playerHandCards_ = other.playerHandCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerHandCardsIsMutable();
              playerHandCards_.addAll(other.playerHandCards_);
            }
            onChanged();
          }
        } else {
          if (!other.playerHandCards_.isEmpty()) {
            if (playerHandCardsBuilder_.isEmpty()) {
              playerHandCardsBuilder_.dispose();
              playerHandCardsBuilder_ = null;
              playerHandCards_ = other.playerHandCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playerHandCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerHandCardsFieldBuilder() : null;
            } else {
              playerHandCardsBuilder_.addAllMessages(other.playerHandCards_);
            }
          }
        }
        if (other.hasQuanNum()) {
          setQuanNum(other.getQuanNum());
        }
        if (other.hasBankerContinue()) {
          setBankerContinue(other.getBankerContinue());
        }
        if (other.hasDice1()) {
          setDice1(other.getDice1());
        }
        if (other.hasDice2()) {
          setDice2(other.getDice2());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        if (other.hasReconnect()) {
          setReconnect(other.getReconnect());
        }
        if (other.hasCardLeft()) {
          setCardLeft(other.getCardLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServiceGold()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerHandCardsCount(); i++) {
          if (!getPlayerHandCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperStartSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperStartSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint32 bankerPos = 1;
      private int bankerPos_ ;
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerPos() {
        return bankerPos_;
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerPos(int value) {
        bitField0_ |= 0x00000001;
        bankerPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPos_ = 0;
        onChanged();
        return this;
      }

      // required sint32 serviceGold = 2;
      private int serviceGold_ ;
      /**
       * <code>required sint32 serviceGold = 2;</code>
       *
       * <pre>
       *台费
       * </pre>
       */
      public boolean hasServiceGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 serviceGold = 2;</code>
       *
       * <pre>
       *台费
       * </pre>
       */
      public int getServiceGold() {
        return serviceGold_;
      }
      /**
       * <code>required sint32 serviceGold = 2;</code>
       *
       * <pre>
       *台费
       * </pre>
       */
      public Builder setServiceGold(int value) {
        bitField0_ |= 0x00000002;
        serviceGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 serviceGold = 2;</code>
       *
       * <pre>
       *台费
       * </pre>
       */
      public Builder clearServiceGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serviceGold_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;
      private java.util.List<packet.mj.MJ.GameOperHandCardSyn> playerHandCards_ =
        java.util.Collections.emptyList();
      private void ensurePlayerHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerHandCards_ = new java.util.ArrayList<packet.mj.MJ.GameOperHandCardSyn>(playerHandCards_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperHandCardSyn, packet.mj.MJ.GameOperHandCardSyn.Builder, packet.mj.MJ.GameOperHandCardSynOrBuilder> playerHandCardsBuilder_;

      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<packet.mj.MJ.GameOperHandCardSyn> getPlayerHandCardsList() {
        if (playerHandCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerHandCards_);
        } else {
          return playerHandCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public int getPlayerHandCardsCount() {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.size();
        } else {
          return playerHandCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.mj.MJ.GameOperHandCardSyn getPlayerHandCards(int index) {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.get(index);
        } else {
          return playerHandCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder setPlayerHandCards(
          int index, packet.mj.MJ.GameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.set(index, value);
          onChanged();
        } else {
          playerHandCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder setPlayerHandCards(
          int index, packet.mj.MJ.GameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(packet.mj.MJ.GameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(value);
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          int index, packet.mj.MJ.GameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(index, value);
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          packet.mj.MJ.GameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          int index, packet.mj.MJ.GameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addAllPlayerHandCards(
          java.lang.Iterable<? extends packet.mj.MJ.GameOperHandCardSyn> values) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          super.addAll(values, playerHandCards_);
          onChanged();
        } else {
          playerHandCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder clearPlayerHandCards() {
        if (playerHandCardsBuilder_ == null) {
          playerHandCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playerHandCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder removePlayerHandCards(int index) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.remove(index);
          onChanged();
        } else {
          playerHandCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.mj.MJ.GameOperHandCardSyn.Builder getPlayerHandCardsBuilder(
          int index) {
        return getPlayerHandCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.mj.MJ.GameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
          int index) {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.get(index);  } else {
          return playerHandCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<? extends packet.mj.MJ.GameOperHandCardSynOrBuilder> 
           getPlayerHandCardsOrBuilderList() {
        if (playerHandCardsBuilder_ != null) {
          return playerHandCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerHandCards_);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.mj.MJ.GameOperHandCardSyn.Builder addPlayerHandCardsBuilder() {
        return getPlayerHandCardsFieldBuilder().addBuilder(
            packet.mj.MJ.GameOperHandCardSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.mj.MJ.GameOperHandCardSyn.Builder addPlayerHandCardsBuilder(
          int index) {
        return getPlayerHandCardsFieldBuilder().addBuilder(
            index, packet.mj.MJ.GameOperHandCardSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperHandCardSyn playerHandCards = 3;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<packet.mj.MJ.GameOperHandCardSyn.Builder> 
           getPlayerHandCardsBuilderList() {
        return getPlayerHandCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperHandCardSyn, packet.mj.MJ.GameOperHandCardSyn.Builder, packet.mj.MJ.GameOperHandCardSynOrBuilder> 
          getPlayerHandCardsFieldBuilder() {
        if (playerHandCardsBuilder_ == null) {
          playerHandCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.mj.MJ.GameOperHandCardSyn, packet.mj.MJ.GameOperHandCardSyn.Builder, packet.mj.MJ.GameOperHandCardSynOrBuilder>(
                  playerHandCards_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          playerHandCards_ = null;
        }
        return playerHandCardsBuilder_;
      }

      // optional sint32 quanNum = 4;
      private int quanNum_ ;
      /**
       * <code>optional sint32 quanNum = 4;</code>
       *
       * <pre>
       *当前圈数   
       * </pre>
       */
      public boolean hasQuanNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 quanNum = 4;</code>
       *
       * <pre>
       *当前圈数   
       * </pre>
       */
      public int getQuanNum() {
        return quanNum_;
      }
      /**
       * <code>optional sint32 quanNum = 4;</code>
       *
       * <pre>
       *当前圈数   
       * </pre>
       */
      public Builder setQuanNum(int value) {
        bitField0_ |= 0x00000008;
        quanNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 quanNum = 4;</code>
       *
       * <pre>
       *当前圈数   
       * </pre>
       */
      public Builder clearQuanNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        quanNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool bankerContinue = 5;
      private boolean bankerContinue_ ;
      /**
       * <code>optional bool bankerContinue = 5;</code>
       *
       * <pre>
       *是否连庄
       * </pre>
       */
      public boolean hasBankerContinue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool bankerContinue = 5;</code>
       *
       * <pre>
       *是否连庄
       * </pre>
       */
      public boolean getBankerContinue() {
        return bankerContinue_;
      }
      /**
       * <code>optional bool bankerContinue = 5;</code>
       *
       * <pre>
       *是否连庄
       * </pre>
       */
      public Builder setBankerContinue(boolean value) {
        bitField0_ |= 0x00000010;
        bankerContinue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bankerContinue = 5;</code>
       *
       * <pre>
       *是否连庄
       * </pre>
       */
      public Builder clearBankerContinue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerContinue_ = false;
        onChanged();
        return this;
      }

      // optional sint32 dice1 = 6;
      private int dice1_ ;
      /**
       * <code>optional sint32 dice1 = 6;</code>
       *
       * <pre>
       *骰子1（1-6的随机数）
       * </pre>
       */
      public boolean hasDice1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 dice1 = 6;</code>
       *
       * <pre>
       *骰子1（1-6的随机数）
       * </pre>
       */
      public int getDice1() {
        return dice1_;
      }
      /**
       * <code>optional sint32 dice1 = 6;</code>
       *
       * <pre>
       *骰子1（1-6的随机数）
       * </pre>
       */
      public Builder setDice1(int value) {
        bitField0_ |= 0x00000020;
        dice1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 dice1 = 6;</code>
       *
       * <pre>
       *骰子1（1-6的随机数）
       * </pre>
       */
      public Builder clearDice1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dice1_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 dice2 = 7;
      private int dice2_ ;
      /**
       * <code>optional sint32 dice2 = 7;</code>
       *
       * <pre>
       *骰子2（1-6的随机数）
       * </pre>
       */
      public boolean hasDice2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 dice2 = 7;</code>
       *
       * <pre>
       *骰子2（1-6的随机数）
       * </pre>
       */
      public int getDice2() {
        return dice2_;
      }
      /**
       * <code>optional sint32 dice2 = 7;</code>
       *
       * <pre>
       *骰子2（1-6的随机数）
       * </pre>
       */
      public Builder setDice2(int value) {
        bitField0_ |= 0x00000040;
        dice2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 dice2 = 7;</code>
       *
       * <pre>
       *骰子2（1-6的随机数）
       * </pre>
       */
      public Builder clearDice2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dice2_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 seq = 8;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 8;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 seq = 8;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 8;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000080;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 8;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seq_ = 0;
        onChanged();
        return this;
      }

      // optional bool reconnect = 9;
      private boolean reconnect_ ;
      /**
       * <code>optional bool reconnect = 9;</code>
       *
       * <pre>
       *是否是断线重连
       * </pre>
       */
      public boolean hasReconnect() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool reconnect = 9;</code>
       *
       * <pre>
       *是否是断线重连
       * </pre>
       */
      public boolean getReconnect() {
        return reconnect_;
      }
      /**
       * <code>optional bool reconnect = 9;</code>
       *
       * <pre>
       *是否是断线重连
       * </pre>
       */
      public Builder setReconnect(boolean value) {
        bitField0_ |= 0x00000100;
        reconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reconnect = 9;</code>
       *
       * <pre>
       *是否是断线重连
       * </pre>
       */
      public Builder clearReconnect() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reconnect_ = false;
        onChanged();
        return this;
      }

      // optional sint32 cardLeft = 12;
      private int cardLeft_ ;
      /**
       * <code>optional sint32 cardLeft = 12;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public boolean hasCardLeft() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 cardLeft = 12;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public int getCardLeft() {
        return cardLeft_;
      }
      /**
       * <code>optional sint32 cardLeft = 12;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder setCardLeft(int value) {
        bitField0_ |= 0x00000200;
        cardLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 cardLeft = 12;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder clearCardLeft() {
        bitField0_ = (bitField0_ & ~0x00000200);
        cardLeft_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperStartSyn)
    }

    static {
      defaultInstance = new GameOperStartSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperStartSyn)
  }

  public interface GameOperHandCardSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // repeated sint32 handCards = 2;
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardsList();
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    int getHandCardsCount();
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    int getHandCards(int index);

    // repeated sint32 downCards = 3;
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getDownCardsList();
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    int getDownCardsCount();
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    int getDownCards(int index);

    // repeated sint32 cardsBefore = 4;
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsBeforeList();
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    int getCardsBeforeCount();
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    int getCardsBefore(int index);
  }
  /**
   * Protobuf type {@code packet.mj.GameOperHandCardSyn}
   *
   * <pre>
   *同步某个的玩家手牌, operType=HANDCARDS
   * </pre>
   */
  public static final class GameOperHandCardSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperHandCardSynOrBuilder {
    // Use GameOperHandCardSyn.newBuilder() to construct.
    private GameOperHandCardSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperHandCardSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperHandCardSyn defaultInstance;
    public static GameOperHandCardSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperHandCardSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperHandCardSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              handCards_.add(input.readSInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCards_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                downCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              downCards_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                downCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                downCards_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cardsBefore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cardsBefore_.add(input.readSInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cardsBefore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardsBefore_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          downCards_ = java.util.Collections.unmodifiableList(downCards_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cardsBefore_ = java.util.Collections.unmodifiableList(cardsBefore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperHandCardSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperHandCardSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperHandCardSyn.class, packet.mj.MJ.GameOperHandCardSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperHandCardSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperHandCardSyn>() {
      public GameOperHandCardSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperHandCardSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperHandCardSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // repeated sint32 handCards = 2;
    public static final int HANDCARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> handCards_;
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardsList() {
      return handCards_;
    }
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public int getHandCardsCount() {
      return handCards_.size();
    }
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public int getHandCards(int index) {
      return handCards_.get(index);
    }

    // repeated sint32 downCards = 3;
    public static final int DOWNCARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> downCards_;
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDownCardsList() {
      return downCards_;
    }
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    public int getDownCardsCount() {
      return downCards_.size();
    }
    /**
     * <code>repeated sint32 downCards = 3;</code>
     *
     * <pre>
     *吃碰杠的牌
     * </pre>
     */
    public int getDownCards(int index) {
      return downCards_.get(index);
    }

    // repeated sint32 cardsBefore = 4;
    public static final int CARDSBEFORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cardsBefore_;
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsBeforeList() {
      return cardsBefore_;
    }
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    public int getCardsBeforeCount() {
      return cardsBefore_.size();
    }
    /**
     * <code>repeated sint32 cardsBefore = 4;</code>
     *
     * <pre>
     *打出的牌
     * </pre>
     */
    public int getCardsBefore(int index) {
      return cardsBefore_.get(index);
    }

    private void initFields() {
      position_ = 0;
      handCards_ = java.util.Collections.emptyList();
      downCards_ = java.util.Collections.emptyList();
      cardsBefore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      for (int i = 0; i < handCards_.size(); i++) {
        output.writeSInt32(2, handCards_.get(i));
      }
      for (int i = 0; i < downCards_.size(); i++) {
        output.writeSInt32(3, downCards_.get(i));
      }
      for (int i = 0; i < cardsBefore_.size(); i++) {
        output.writeSInt32(4, cardsBefore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(handCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < downCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(downCards_.get(i));
        }
        size += dataSize;
        size += 1 * getDownCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardsBefore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(cardsBefore_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsBeforeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperHandCardSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperHandCardSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperHandCardSyn}
     *
     * <pre>
     *同步某个的玩家手牌, operType=HANDCARDS
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperHandCardSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperHandCardSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperHandCardSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperHandCardSyn.class, packet.mj.MJ.GameOperHandCardSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperHandCardSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        downCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        cardsBefore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperHandCardSyn_descriptor;
      }

      public packet.mj.MJ.GameOperHandCardSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperHandCardSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperHandCardSyn build() {
        packet.mj.MJ.GameOperHandCardSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperHandCardSyn buildPartial() {
        packet.mj.MJ.GameOperHandCardSyn result = new packet.mj.MJ.GameOperHandCardSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.handCards_ = handCards_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          downCards_ = java.util.Collections.unmodifiableList(downCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.downCards_ = downCards_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsBefore_ = java.util.Collections.unmodifiableList(cardsBefore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cardsBefore_ = cardsBefore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperHandCardSyn) {
          return mergeFrom((packet.mj.MJ.GameOperHandCardSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperHandCardSyn other) {
        if (other == packet.mj.MJ.GameOperHandCardSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (!other.handCards_.isEmpty()) {
          if (handCards_.isEmpty()) {
            handCards_ = other.handCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandCardsIsMutable();
            handCards_.addAll(other.handCards_);
          }
          onChanged();
        }
        if (!other.downCards_.isEmpty()) {
          if (downCards_.isEmpty()) {
            downCards_ = other.downCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDownCardsIsMutable();
            downCards_.addAll(other.downCards_);
          }
          onChanged();
        }
        if (!other.cardsBefore_.isEmpty()) {
          if (cardsBefore_.isEmpty()) {
            cardsBefore_ = other.cardsBefore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardsBeforeIsMutable();
            cardsBefore_.addAll(other.cardsBefore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperHandCardSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperHandCardSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 handCards = 2;
      private java.util.List<java.lang.Integer> handCards_ = java.util.Collections.emptyList();
      private void ensureHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = new java.util.ArrayList<java.lang.Integer>(handCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardsList() {
        return java.util.Collections.unmodifiableList(handCards_);
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public int getHandCardsCount() {
        return handCards_.size();
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public int getHandCards(int index) {
        return handCards_.get(index);
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder setHandCards(
          int index, int value) {
        ensureHandCardsIsMutable();
        handCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder addHandCards(int value) {
        ensureHandCardsIsMutable();
        handCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder addAllHandCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardsIsMutable();
        super.addAll(values, handCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder clearHandCards() {
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated sint32 downCards = 3;
      private java.util.List<java.lang.Integer> downCards_ = java.util.Collections.emptyList();
      private void ensureDownCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          downCards_ = new java.util.ArrayList<java.lang.Integer>(downCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDownCardsList() {
        return java.util.Collections.unmodifiableList(downCards_);
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public int getDownCardsCount() {
        return downCards_.size();
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public int getDownCards(int index) {
        return downCards_.get(index);
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public Builder setDownCards(
          int index, int value) {
        ensureDownCardsIsMutable();
        downCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public Builder addDownCards(int value) {
        ensureDownCardsIsMutable();
        downCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public Builder addAllDownCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDownCardsIsMutable();
        super.addAll(values, downCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 downCards = 3;</code>
       *
       * <pre>
       *吃碰杠的牌
       * </pre>
       */
      public Builder clearDownCards() {
        downCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated sint32 cardsBefore = 4;
      private java.util.List<java.lang.Integer> cardsBefore_ = java.util.Collections.emptyList();
      private void ensureCardsBeforeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cardsBefore_ = new java.util.ArrayList<java.lang.Integer>(cardsBefore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsBeforeList() {
        return java.util.Collections.unmodifiableList(cardsBefore_);
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public int getCardsBeforeCount() {
        return cardsBefore_.size();
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public int getCardsBefore(int index) {
        return cardsBefore_.get(index);
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public Builder setCardsBefore(
          int index, int value) {
        ensureCardsBeforeIsMutable();
        cardsBefore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public Builder addCardsBefore(int value) {
        ensureCardsBeforeIsMutable();
        cardsBefore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public Builder addAllCardsBefore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsBeforeIsMutable();
        super.addAll(values, cardsBefore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardsBefore = 4;</code>
       *
       * <pre>
       *打出的牌
       * </pre>
       */
      public Builder clearCardsBefore() {
        cardsBefore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperHandCardSyn)
    }

    static {
      defaultInstance = new GameOperHandCardSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperHandCardSyn)
  }

  public interface GameOperPublicInfoSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 cardLeft = 1;
    /**
     * <code>required sint32 cardLeft = 1;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    boolean hasCardLeft();
    /**
     * <code>required sint32 cardLeft = 1;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    int getCardLeft();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperPublicInfoSyn}
   *
   * <pre>
   *同步公共信息, operType=PUBLICINFO
   * </pre>
   */
  public static final class GameOperPublicInfoSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperPublicInfoSynOrBuilder {
    // Use GameOperPublicInfoSyn.newBuilder() to construct.
    private GameOperPublicInfoSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperPublicInfoSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperPublicInfoSyn defaultInstance;
    public static GameOperPublicInfoSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperPublicInfoSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperPublicInfoSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cardLeft_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPublicInfoSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPublicInfoSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperPublicInfoSyn.class, packet.mj.MJ.GameOperPublicInfoSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperPublicInfoSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperPublicInfoSyn>() {
      public GameOperPublicInfoSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperPublicInfoSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperPublicInfoSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 cardLeft = 1;
    public static final int CARDLEFT_FIELD_NUMBER = 1;
    private int cardLeft_;
    /**
     * <code>required sint32 cardLeft = 1;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public boolean hasCardLeft() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 cardLeft = 1;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public int getCardLeft() {
      return cardLeft_;
    }

    private void initFields() {
      cardLeft_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCardLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, cardLeft_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, cardLeft_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPublicInfoSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperPublicInfoSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperPublicInfoSyn}
     *
     * <pre>
     *同步公共信息, operType=PUBLICINFO
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperPublicInfoSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPublicInfoSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPublicInfoSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperPublicInfoSyn.class, packet.mj.MJ.GameOperPublicInfoSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperPublicInfoSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardLeft_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPublicInfoSyn_descriptor;
      }

      public packet.mj.MJ.GameOperPublicInfoSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperPublicInfoSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperPublicInfoSyn build() {
        packet.mj.MJ.GameOperPublicInfoSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperPublicInfoSyn buildPartial() {
        packet.mj.MJ.GameOperPublicInfoSyn result = new packet.mj.MJ.GameOperPublicInfoSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardLeft_ = cardLeft_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperPublicInfoSyn) {
          return mergeFrom((packet.mj.MJ.GameOperPublicInfoSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperPublicInfoSyn other) {
        if (other == packet.mj.MJ.GameOperPublicInfoSyn.getDefaultInstance()) return this;
        if (other.hasCardLeft()) {
          setCardLeft(other.getCardLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCardLeft()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperPublicInfoSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperPublicInfoSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 cardLeft = 1;
      private int cardLeft_ ;
      /**
       * <code>required sint32 cardLeft = 1;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public boolean hasCardLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 cardLeft = 1;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public int getCardLeft() {
        return cardLeft_;
      }
      /**
       * <code>required sint32 cardLeft = 1;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder setCardLeft(int value) {
        bitField0_ |= 0x00000001;
        cardLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 cardLeft = 1;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder clearCardLeft() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardLeft_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperPublicInfoSyn)
    }

    static {
      defaultInstance = new GameOperPublicInfoSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperPublicInfoSyn)
  }

  public interface GameOperActorSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 timeLeft = 2;
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    boolean hasTimeLeft();
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    int getTimeLeft();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperActorSyn}
   *
   * <pre>
   *同步行动者信息 operType=ACTSYN
   * </pre>
   */
  public static final class GameOperActorSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperActorSynOrBuilder {
    // Use GameOperActorSyn.newBuilder() to construct.
    private GameOperActorSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperActorSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperActorSyn defaultInstance;
    public static GameOperActorSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperActorSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperActorSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeLeft_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperActorSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperActorSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperActorSyn.class, packet.mj.MJ.GameOperActorSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperActorSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperActorSyn>() {
      public GameOperActorSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperActorSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperActorSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 timeLeft = 2;
    public static final int TIMELEFT_FIELD_NUMBER = 2;
    private int timeLeft_;
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    public boolean hasTimeLeft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    public int getTimeLeft() {
      return timeLeft_;
    }

    private void initFields() {
      position_ = 0;
      timeLeft_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, timeLeft_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, timeLeft_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperActorSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperActorSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperActorSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperActorSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperActorSyn}
     *
     * <pre>
     *同步行动者信息 operType=ACTSYN
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperActorSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperActorSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperActorSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperActorSyn.class, packet.mj.MJ.GameOperActorSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperActorSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeLeft_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperActorSyn_descriptor;
      }

      public packet.mj.MJ.GameOperActorSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperActorSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperActorSyn build() {
        packet.mj.MJ.GameOperActorSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperActorSyn buildPartial() {
        packet.mj.MJ.GameOperActorSyn result = new packet.mj.MJ.GameOperActorSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeLeft_ = timeLeft_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperActorSyn) {
          return mergeFrom((packet.mj.MJ.GameOperActorSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperActorSyn other) {
        if (other == packet.mj.MJ.GameOperActorSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasTimeLeft()) {
          setTimeLeft(other.getTimeLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasTimeLeft()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperActorSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperActorSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 timeLeft = 2;
      private int timeLeft_ ;
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public boolean hasTimeLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public int getTimeLeft() {
        return timeLeft_;
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public Builder setTimeLeft(int value) {
        bitField0_ |= 0x00000002;
        timeLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public Builder clearTimeLeft() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeLeft_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperActorSyn)
    }

    static {
      defaultInstance = new GameOperActorSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperActorSyn)
  }

  public interface GameOperPlayerActionSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 action = 2;
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
     * </pre>
     */
    int getAction();

    // repeated sint32 cardValue = 3;
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardValueList();
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    int getCardValueCount();
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    int getCardValue(int index);

    // optional sint32 seq = 5;
    /**
     * <code>optional sint32 seq = 5;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 5;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperPlayerActionSyn}
   *
   * <pre>
   *玩家操作同步operType=ACTIONSYN, 前端通过此包告诉后端玩家进行了什么操作，后端通过此包将操作告诉其它玩家
   * </pre>
   */
  public static final class GameOperPlayerActionSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperPlayerActionSynOrBuilder {
    // Use GameOperPlayerActionSyn.newBuilder() to construct.
    private GameOperPlayerActionSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperPlayerActionSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperPlayerActionSyn defaultInstance;
    public static GameOperPlayerActionSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperPlayerActionSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperPlayerActionSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              action_ = input.readSInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardValue_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardValue_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              seq_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = java.util.Collections.unmodifiableList(cardValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperPlayerActionSyn.class, packet.mj.MJ.GameOperPlayerActionSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperPlayerActionSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperPlayerActionSyn>() {
      public GameOperPlayerActionSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperPlayerActionSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperPlayerActionSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 action = 2;
    public static final int ACTION_FIELD_NUMBER = 2;
    private int action_;
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // repeated sint32 cardValue = 3;
    public static final int CARDVALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardValue_;
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardValueList() {
      return cardValue_;
    }
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    public int getCardValueCount() {
      return cardValue_.size();
    }
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出碰传一个牌, 吃和支对传2个牌
     * </pre>
     */
    public int getCardValue(int index) {
      return cardValue_.get(index);
    }

    // optional sint32 seq = 5;
    public static final int SEQ_FIELD_NUMBER = 5;
    private int seq_;
    /**
     * <code>optional sint32 seq = 5;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 seq = 5;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      position_ = 0;
      action_ = 0;
      cardValue_ = java.util.Collections.emptyList();
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, action_);
      }
      for (int i = 0; i < cardValue_.size(); i++) {
        output.writeSInt32(3, cardValue_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(5, seq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(cardValue_.get(i));
        }
        size += dataSize;
        size += 1 * getCardValueList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, seq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperPlayerActionSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperPlayerActionSyn}
     *
     * <pre>
     *玩家操作同步operType=ACTIONSYN, 前端通过此包告诉后端玩家进行了什么操作，后端通过此包将操作告诉其它玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperPlayerActionSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperPlayerActionSyn.class, packet.mj.MJ.GameOperPlayerActionSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperPlayerActionSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionSyn_descriptor;
      }

      public packet.mj.MJ.GameOperPlayerActionSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperPlayerActionSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperPlayerActionSyn build() {
        packet.mj.MJ.GameOperPlayerActionSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperPlayerActionSyn buildPartial() {
        packet.mj.MJ.GameOperPlayerActionSyn result = new packet.mj.MJ.GameOperPlayerActionSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = java.util.Collections.unmodifiableList(cardValue_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardValue_ = cardValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperPlayerActionSyn) {
          return mergeFrom((packet.mj.MJ.GameOperPlayerActionSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperPlayerActionSyn other) {
        if (other == packet.mj.MJ.GameOperPlayerActionSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.cardValue_.isEmpty()) {
          if (cardValue_.isEmpty()) {
            cardValue_ = other.cardValue_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardValueIsMutable();
            cardValue_.addAll(other.cardValue_);
          }
          onChanged();
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasAction()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperPlayerActionSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperPlayerActionSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 action = 2;
      private int action_ ;
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000002;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x100:取消)  (0x40000000:摸牌)
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 cardValue = 3;
      private java.util.List<java.lang.Integer> cardValue_ = java.util.Collections.emptyList();
      private void ensureCardValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = new java.util.ArrayList<java.lang.Integer>(cardValue_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardValueList() {
        return java.util.Collections.unmodifiableList(cardValue_);
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public int getCardValueCount() {
        return cardValue_.size();
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public int getCardValue(int index) {
        return cardValue_.get(index);
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public Builder setCardValue(
          int index, int value) {
        ensureCardValueIsMutable();
        cardValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public Builder addCardValue(int value) {
        ensureCardValueIsMutable();
        cardValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public Builder addAllCardValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardValueIsMutable();
        super.addAll(values, cardValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出碰传一个牌, 吃和支对传2个牌
       * </pre>
       */
      public Builder clearCardValue() {
        cardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional sint32 seq = 5;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 5;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 seq = 5;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 5;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000008;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 5;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperPlayerActionSyn)
    }

    static {
      defaultInstance = new GameOperPlayerActionSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperPlayerActionSyn)
  }

  public interface GameOperPlayerActionNotifyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 actions = 2;
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
     * </pre>
     */
    boolean hasActions();
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
     * </pre>
     */
    int getActions();

    // optional sint32 newCard = 3;
    /**
     * <code>optional sint32 newCard = 3;</code>
     *
     * <pre>
     *刚摸到的牌
     * </pre>
     */
    boolean hasNewCard();
    /**
     * <code>optional sint32 newCard = 3;</code>
     *
     * <pre>
     *刚摸到的牌
     * </pre>
     */
    int getNewCard();

    // repeated sint32 tingList = 4;
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    java.util.List<java.lang.Integer> getTingListList();
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    int getTingListCount();
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    int getTingList(int index);

    // repeated sint32 gangList = 5;
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangListList();
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    int getGangListCount();
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    int getGangList(int index);

    // repeated sint32 tingDzs = 6;
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    java.util.List<java.lang.Integer> getTingDzsList();
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    int getTingDzsCount();
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    int getTingDzs(int index);

    // repeated .packet.mj.GameOperChiArg chiArg = 7;
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    java.util.List<packet.mj.MJ.GameOperChiArg> 
        getChiArgList();
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    packet.mj.MJ.GameOperChiArg getChiArg(int index);
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    int getChiArgCount();
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    java.util.List<? extends packet.mj.MJ.GameOperChiArgOrBuilder> 
        getChiArgOrBuilderList();
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    packet.mj.MJ.GameOperChiArgOrBuilder getChiArgOrBuilder(
        int index);

    // optional sint32 pengArg = 8;
    /**
     * <code>optional sint32 pengArg = 8;</code>
     *
     * <pre>
     *可以碰的牌，这里只传一张牌
     * </pre>
     */
    boolean hasPengArg();
    /**
     * <code>optional sint32 pengArg = 8;</code>
     *
     * <pre>
     *可以碰的牌，这里只传一张牌
     * </pre>
     */
    int getPengArg();

    // optional sint32 lastActionPosition = 9;
    /**
     * <code>optional sint32 lastActionPosition = 9;</code>
     *
     * <pre>
     *上一个行动的玩家位置
     * </pre>
     */
    boolean hasLastActionPosition();
    /**
     * <code>optional sint32 lastActionPosition = 9;</code>
     *
     * <pre>
     *上一个行动的玩家位置
     * </pre>
     */
    int getLastActionPosition();

    // optional sint32 lastActionCard = 10;
    /**
     * <code>optional sint32 lastActionCard = 10;</code>
     *
     * <pre>
     *上一个行动的牌值
     * </pre>
     */
    boolean hasLastActionCard();
    /**
     * <code>optional sint32 lastActionCard = 10;</code>
     *
     * <pre>
     *上一个行动的牌值
     * </pre>
     */
    int getLastActionCard();

    // optional sint32 mustZhiDui = 11;
    /**
     * <code>optional sint32 mustZhiDui = 11;</code>
     *
     * <pre>
     *是否必须支队,非必须为0,必须为1
     * </pre>
     */
    boolean hasMustZhiDui();
    /**
     * <code>optional sint32 mustZhiDui = 11;</code>
     *
     * <pre>
     *是否必须支队,非必须为0,必须为1
     * </pre>
     */
    int getMustZhiDui();

    // optional sint32 seq = 100;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperPlayerActionNotify}
   *
   * <pre>
   *服务器提示玩家操作 operType=ACTNOTIFY
   * </pre>
   */
  public static final class GameOperPlayerActionNotify extends
      com.google.protobuf.GeneratedMessage
      implements GameOperPlayerActionNotifyOrBuilder {
    // Use GameOperPlayerActionNotify.newBuilder() to construct.
    private GameOperPlayerActionNotify(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperPlayerActionNotify(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperPlayerActionNotify defaultInstance;
    public static GameOperPlayerActionNotify getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperPlayerActionNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperPlayerActionNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              actions_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              newCard_ = input.readSInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                tingList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              tingList_.add(input.readSInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                tingList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                tingList_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                gangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              gangList_.add(input.readSInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                gangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangList_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tingDzs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              tingDzs_.add(input.readSInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                tingDzs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                tingDzs_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                chiArg_ = new java.util.ArrayList<packet.mj.MJ.GameOperChiArg>();
                mutable_bitField0_ |= 0x00000040;
              }
              chiArg_.add(input.readMessage(packet.mj.MJ.GameOperChiArg.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              pengArg_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              lastActionPosition_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              lastActionCard_ = input.readSInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              mustZhiDui_ = input.readSInt32();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000080;
              seq_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          tingList_ = java.util.Collections.unmodifiableList(tingList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          gangList_ = java.util.Collections.unmodifiableList(gangList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tingDzs_ = java.util.Collections.unmodifiableList(tingDzs_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          chiArg_ = java.util.Collections.unmodifiableList(chiArg_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionNotify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperPlayerActionNotify.class, packet.mj.MJ.GameOperPlayerActionNotify.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperPlayerActionNotify> PARSER =
        new com.google.protobuf.AbstractParser<GameOperPlayerActionNotify>() {
      public GameOperPlayerActionNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperPlayerActionNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperPlayerActionNotify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 actions = 2;
    public static final int ACTIONS_FIELD_NUMBER = 2;
    private int actions_;
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
     * </pre>
     */
    public boolean hasActions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
     * </pre>
     */
    public int getActions() {
      return actions_;
    }

    // optional sint32 newCard = 3;
    public static final int NEWCARD_FIELD_NUMBER = 3;
    private int newCard_;
    /**
     * <code>optional sint32 newCard = 3;</code>
     *
     * <pre>
     *刚摸到的牌
     * </pre>
     */
    public boolean hasNewCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 newCard = 3;</code>
     *
     * <pre>
     *刚摸到的牌
     * </pre>
     */
    public int getNewCard() {
      return newCard_;
    }

    // repeated sint32 tingList = 4;
    public static final int TINGLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> tingList_;
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTingListList() {
      return tingList_;
    }
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    public int getTingListCount() {
      return tingList_.size();
    }
    /**
     * <code>repeated sint32 tingList = 4;</code>
     *
     * <pre>
     *打出其中任何一张牌就可以听
     * </pre>
     */
    public int getTingList(int index) {
      return tingList_.get(index);
    }

    // repeated sint32 gangList = 5;
    public static final int GANGLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> gangList_;
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangListList() {
      return gangList_;
    }
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    public int getGangListCount() {
      return gangList_.size();
    }
    /**
     * <code>repeated sint32 gangList = 5;</code>
     *
     * <pre>
     *任何一张都能杠
     * </pre>
     */
    public int getGangList(int index) {
      return gangList_.get(index);
    }

    // repeated sint32 tingDzs = 6;
    public static final int TINGDZS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> tingDzs_;
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTingDzsList() {
      return tingDzs_;
    }
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    public int getTingDzsCount() {
      return tingDzs_.size();
    }
    /**
     * <code>repeated sint32 tingDzs = 6;</code>
     *
     * <pre>
     *支对提醒时，告诉客户端有哪些对子
     * </pre>
     */
    public int getTingDzs(int index) {
      return tingDzs_.get(index);
    }

    // repeated .packet.mj.GameOperChiArg chiArg = 7;
    public static final int CHIARG_FIELD_NUMBER = 7;
    private java.util.List<packet.mj.MJ.GameOperChiArg> chiArg_;
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    public java.util.List<packet.mj.MJ.GameOperChiArg> getChiArgList() {
      return chiArg_;
    }
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    public java.util.List<? extends packet.mj.MJ.GameOperChiArgOrBuilder> 
        getChiArgOrBuilderList() {
      return chiArg_;
    }
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    public int getChiArgCount() {
      return chiArg_.size();
    }
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    public packet.mj.MJ.GameOperChiArg getChiArg(int index) {
      return chiArg_.get(index);
    }
    /**
     * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
     */
    public packet.mj.MJ.GameOperChiArgOrBuilder getChiArgOrBuilder(
        int index) {
      return chiArg_.get(index);
    }

    // optional sint32 pengArg = 8;
    public static final int PENGARG_FIELD_NUMBER = 8;
    private int pengArg_;
    /**
     * <code>optional sint32 pengArg = 8;</code>
     *
     * <pre>
     *可以碰的牌，这里只传一张牌
     * </pre>
     */
    public boolean hasPengArg() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 pengArg = 8;</code>
     *
     * <pre>
     *可以碰的牌，这里只传一张牌
     * </pre>
     */
    public int getPengArg() {
      return pengArg_;
    }

    // optional sint32 lastActionPosition = 9;
    public static final int LASTACTIONPOSITION_FIELD_NUMBER = 9;
    private int lastActionPosition_;
    /**
     * <code>optional sint32 lastActionPosition = 9;</code>
     *
     * <pre>
     *上一个行动的玩家位置
     * </pre>
     */
    public boolean hasLastActionPosition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 lastActionPosition = 9;</code>
     *
     * <pre>
     *上一个行动的玩家位置
     * </pre>
     */
    public int getLastActionPosition() {
      return lastActionPosition_;
    }

    // optional sint32 lastActionCard = 10;
    public static final int LASTACTIONCARD_FIELD_NUMBER = 10;
    private int lastActionCard_;
    /**
     * <code>optional sint32 lastActionCard = 10;</code>
     *
     * <pre>
     *上一个行动的牌值
     * </pre>
     */
    public boolean hasLastActionCard() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 lastActionCard = 10;</code>
     *
     * <pre>
     *上一个行动的牌值
     * </pre>
     */
    public int getLastActionCard() {
      return lastActionCard_;
    }

    // optional sint32 mustZhiDui = 11;
    public static final int MUSTZHIDUI_FIELD_NUMBER = 11;
    private int mustZhiDui_;
    /**
     * <code>optional sint32 mustZhiDui = 11;</code>
     *
     * <pre>
     *是否必须支队,非必须为0,必须为1
     * </pre>
     */
    public boolean hasMustZhiDui() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 mustZhiDui = 11;</code>
     *
     * <pre>
     *是否必须支队,非必须为0,必须为1
     * </pre>
     */
    public int getMustZhiDui() {
      return mustZhiDui_;
    }

    // optional sint32 seq = 100;
    public static final int SEQ_FIELD_NUMBER = 100;
    private int seq_;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      position_ = 0;
      actions_ = 0;
      newCard_ = 0;
      tingList_ = java.util.Collections.emptyList();
      gangList_ = java.util.Collections.emptyList();
      tingDzs_ = java.util.Collections.emptyList();
      chiArg_ = java.util.Collections.emptyList();
      pengArg_ = 0;
      lastActionPosition_ = 0;
      lastActionCard_ = 0;
      mustZhiDui_ = 0;
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActions()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getChiArgCount(); i++) {
        if (!getChiArg(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, actions_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, newCard_);
      }
      for (int i = 0; i < tingList_.size(); i++) {
        output.writeSInt32(4, tingList_.get(i));
      }
      for (int i = 0; i < gangList_.size(); i++) {
        output.writeSInt32(5, gangList_.get(i));
      }
      for (int i = 0; i < tingDzs_.size(); i++) {
        output.writeSInt32(6, tingDzs_.get(i));
      }
      for (int i = 0; i < chiArg_.size(); i++) {
        output.writeMessage(7, chiArg_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(8, pengArg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(9, lastActionPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(10, lastActionCard_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(11, mustZhiDui_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(100, seq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, actions_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, newCard_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tingList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(tingList_.get(i));
        }
        size += dataSize;
        size += 1 * getTingListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(gangList_.get(i));
        }
        size += dataSize;
        size += 1 * getGangListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tingDzs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(tingDzs_.get(i));
        }
        size += dataSize;
        size += 1 * getTingDzsList().size();
      }
      for (int i = 0; i < chiArg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, chiArg_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, pengArg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, lastActionPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, lastActionCard_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, mustZhiDui_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(100, seq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerActionNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperPlayerActionNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperPlayerActionNotify}
     *
     * <pre>
     *服务器提示玩家操作 operType=ACTNOTIFY
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperPlayerActionNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionNotify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperPlayerActionNotify.class, packet.mj.MJ.GameOperPlayerActionNotify.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperPlayerActionNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChiArgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        actions_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        newCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tingList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        gangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        tingDzs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (chiArgBuilder_ == null) {
          chiArg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          chiArgBuilder_.clear();
        }
        pengArg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        lastActionPosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        lastActionCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        mustZhiDui_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerActionNotify_descriptor;
      }

      public packet.mj.MJ.GameOperPlayerActionNotify getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperPlayerActionNotify.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperPlayerActionNotify build() {
        packet.mj.MJ.GameOperPlayerActionNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperPlayerActionNotify buildPartial() {
        packet.mj.MJ.GameOperPlayerActionNotify result = new packet.mj.MJ.GameOperPlayerActionNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actions_ = actions_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newCard_ = newCard_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          tingList_ = java.util.Collections.unmodifiableList(tingList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tingList_ = tingList_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          gangList_ = java.util.Collections.unmodifiableList(gangList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.gangList_ = gangList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          tingDzs_ = java.util.Collections.unmodifiableList(tingDzs_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.tingDzs_ = tingDzs_;
        if (chiArgBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            chiArg_ = java.util.Collections.unmodifiableList(chiArg_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.chiArg_ = chiArg_;
        } else {
          result.chiArg_ = chiArgBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pengArg_ = pengArg_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastActionPosition_ = lastActionPosition_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lastActionCard_ = lastActionCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.mustZhiDui_ = mustZhiDui_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperPlayerActionNotify) {
          return mergeFrom((packet.mj.MJ.GameOperPlayerActionNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperPlayerActionNotify other) {
        if (other == packet.mj.MJ.GameOperPlayerActionNotify.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasActions()) {
          setActions(other.getActions());
        }
        if (other.hasNewCard()) {
          setNewCard(other.getNewCard());
        }
        if (!other.tingList_.isEmpty()) {
          if (tingList_.isEmpty()) {
            tingList_ = other.tingList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTingListIsMutable();
            tingList_.addAll(other.tingList_);
          }
          onChanged();
        }
        if (!other.gangList_.isEmpty()) {
          if (gangList_.isEmpty()) {
            gangList_ = other.gangList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGangListIsMutable();
            gangList_.addAll(other.gangList_);
          }
          onChanged();
        }
        if (!other.tingDzs_.isEmpty()) {
          if (tingDzs_.isEmpty()) {
            tingDzs_ = other.tingDzs_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTingDzsIsMutable();
            tingDzs_.addAll(other.tingDzs_);
          }
          onChanged();
        }
        if (chiArgBuilder_ == null) {
          if (!other.chiArg_.isEmpty()) {
            if (chiArg_.isEmpty()) {
              chiArg_ = other.chiArg_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureChiArgIsMutable();
              chiArg_.addAll(other.chiArg_);
            }
            onChanged();
          }
        } else {
          if (!other.chiArg_.isEmpty()) {
            if (chiArgBuilder_.isEmpty()) {
              chiArgBuilder_.dispose();
              chiArgBuilder_ = null;
              chiArg_ = other.chiArg_;
              bitField0_ = (bitField0_ & ~0x00000040);
              chiArgBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChiArgFieldBuilder() : null;
            } else {
              chiArgBuilder_.addAllMessages(other.chiArg_);
            }
          }
        }
        if (other.hasPengArg()) {
          setPengArg(other.getPengArg());
        }
        if (other.hasLastActionPosition()) {
          setLastActionPosition(other.getLastActionPosition());
        }
        if (other.hasLastActionCard()) {
          setLastActionCard(other.getLastActionCard());
        }
        if (other.hasMustZhiDui()) {
          setMustZhiDui(other.getMustZhiDui());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasActions()) {
          
          return false;
        }
        for (int i = 0; i < getChiArgCount(); i++) {
          if (!getChiArg(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperPlayerActionNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperPlayerActionNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 actions = 2;
      private int actions_ ;
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
       * </pre>
       */
      public boolean hasActions() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
       * </pre>
       */
      public int getActions() {
        return actions_;
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
       * </pre>
       */
      public Builder setActions(int value) {
        bitField0_ |= 0x00000002;
        actions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x01:吃) (0x02:碰) (0x04:暗杠) (0x08:补杠) (0x10:直杠) (0x20:出牌) (0x40:胡牌) (0x80:听牌) (0x80000:自动出) (0x8000:已出) (0x4000000:抢听) (0x40000:吃听) (0x2000000:碰听) (0x20000000:支对听 ) (0x40000000:摸牌)
       * </pre>
       */
      public Builder clearActions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actions_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 newCard = 3;
      private int newCard_ ;
      /**
       * <code>optional sint32 newCard = 3;</code>
       *
       * <pre>
       *刚摸到的牌
       * </pre>
       */
      public boolean hasNewCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 newCard = 3;</code>
       *
       * <pre>
       *刚摸到的牌
       * </pre>
       */
      public int getNewCard() {
        return newCard_;
      }
      /**
       * <code>optional sint32 newCard = 3;</code>
       *
       * <pre>
       *刚摸到的牌
       * </pre>
       */
      public Builder setNewCard(int value) {
        bitField0_ |= 0x00000004;
        newCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 newCard = 3;</code>
       *
       * <pre>
       *刚摸到的牌
       * </pre>
       */
      public Builder clearNewCard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newCard_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 tingList = 4;
      private java.util.List<java.lang.Integer> tingList_ = java.util.Collections.emptyList();
      private void ensureTingListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          tingList_ = new java.util.ArrayList<java.lang.Integer>(tingList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTingListList() {
        return java.util.Collections.unmodifiableList(tingList_);
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public int getTingListCount() {
        return tingList_.size();
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public int getTingList(int index) {
        return tingList_.get(index);
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public Builder setTingList(
          int index, int value) {
        ensureTingListIsMutable();
        tingList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public Builder addTingList(int value) {
        ensureTingListIsMutable();
        tingList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public Builder addAllTingList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTingListIsMutable();
        super.addAll(values, tingList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingList = 4;</code>
       *
       * <pre>
       *打出其中任何一张牌就可以听
       * </pre>
       */
      public Builder clearTingList() {
        tingList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated sint32 gangList = 5;
      private java.util.List<java.lang.Integer> gangList_ = java.util.Collections.emptyList();
      private void ensureGangListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          gangList_ = new java.util.ArrayList<java.lang.Integer>(gangList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangListList() {
        return java.util.Collections.unmodifiableList(gangList_);
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public int getGangListCount() {
        return gangList_.size();
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public int getGangList(int index) {
        return gangList_.get(index);
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public Builder setGangList(
          int index, int value) {
        ensureGangListIsMutable();
        gangList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public Builder addGangList(int value) {
        ensureGangListIsMutable();
        gangList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public Builder addAllGangList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangListIsMutable();
        super.addAll(values, gangList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 gangList = 5;</code>
       *
       * <pre>
       *任何一张都能杠
       * </pre>
       */
      public Builder clearGangList() {
        gangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated sint32 tingDzs = 6;
      private java.util.List<java.lang.Integer> tingDzs_ = java.util.Collections.emptyList();
      private void ensureTingDzsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tingDzs_ = new java.util.ArrayList<java.lang.Integer>(tingDzs_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTingDzsList() {
        return java.util.Collections.unmodifiableList(tingDzs_);
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public int getTingDzsCount() {
        return tingDzs_.size();
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public int getTingDzs(int index) {
        return tingDzs_.get(index);
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public Builder setTingDzs(
          int index, int value) {
        ensureTingDzsIsMutable();
        tingDzs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public Builder addTingDzs(int value) {
        ensureTingDzsIsMutable();
        tingDzs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public Builder addAllTingDzs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTingDzsIsMutable();
        super.addAll(values, tingDzs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 tingDzs = 6;</code>
       *
       * <pre>
       *支对提醒时，告诉客户端有哪些对子
       * </pre>
       */
      public Builder clearTingDzs() {
        tingDzs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated .packet.mj.GameOperChiArg chiArg = 7;
      private java.util.List<packet.mj.MJ.GameOperChiArg> chiArg_ =
        java.util.Collections.emptyList();
      private void ensureChiArgIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          chiArg_ = new java.util.ArrayList<packet.mj.MJ.GameOperChiArg>(chiArg_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperChiArg, packet.mj.MJ.GameOperChiArg.Builder, packet.mj.MJ.GameOperChiArgOrBuilder> chiArgBuilder_;

      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public java.util.List<packet.mj.MJ.GameOperChiArg> getChiArgList() {
        if (chiArgBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chiArg_);
        } else {
          return chiArgBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public int getChiArgCount() {
        if (chiArgBuilder_ == null) {
          return chiArg_.size();
        } else {
          return chiArgBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public packet.mj.MJ.GameOperChiArg getChiArg(int index) {
        if (chiArgBuilder_ == null) {
          return chiArg_.get(index);
        } else {
          return chiArgBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder setChiArg(
          int index, packet.mj.MJ.GameOperChiArg value) {
        if (chiArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiArgIsMutable();
          chiArg_.set(index, value);
          onChanged();
        } else {
          chiArgBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder setChiArg(
          int index, packet.mj.MJ.GameOperChiArg.Builder builderForValue) {
        if (chiArgBuilder_ == null) {
          ensureChiArgIsMutable();
          chiArg_.set(index, builderForValue.build());
          onChanged();
        } else {
          chiArgBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder addChiArg(packet.mj.MJ.GameOperChiArg value) {
        if (chiArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiArgIsMutable();
          chiArg_.add(value);
          onChanged();
        } else {
          chiArgBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder addChiArg(
          int index, packet.mj.MJ.GameOperChiArg value) {
        if (chiArgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiArgIsMutable();
          chiArg_.add(index, value);
          onChanged();
        } else {
          chiArgBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder addChiArg(
          packet.mj.MJ.GameOperChiArg.Builder builderForValue) {
        if (chiArgBuilder_ == null) {
          ensureChiArgIsMutable();
          chiArg_.add(builderForValue.build());
          onChanged();
        } else {
          chiArgBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder addChiArg(
          int index, packet.mj.MJ.GameOperChiArg.Builder builderForValue) {
        if (chiArgBuilder_ == null) {
          ensureChiArgIsMutable();
          chiArg_.add(index, builderForValue.build());
          onChanged();
        } else {
          chiArgBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder addAllChiArg(
          java.lang.Iterable<? extends packet.mj.MJ.GameOperChiArg> values) {
        if (chiArgBuilder_ == null) {
          ensureChiArgIsMutable();
          super.addAll(values, chiArg_);
          onChanged();
        } else {
          chiArgBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder clearChiArg() {
        if (chiArgBuilder_ == null) {
          chiArg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          chiArgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public Builder removeChiArg(int index) {
        if (chiArgBuilder_ == null) {
          ensureChiArgIsMutable();
          chiArg_.remove(index);
          onChanged();
        } else {
          chiArgBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public packet.mj.MJ.GameOperChiArg.Builder getChiArgBuilder(
          int index) {
        return getChiArgFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public packet.mj.MJ.GameOperChiArgOrBuilder getChiArgOrBuilder(
          int index) {
        if (chiArgBuilder_ == null) {
          return chiArg_.get(index);  } else {
          return chiArgBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public java.util.List<? extends packet.mj.MJ.GameOperChiArgOrBuilder> 
           getChiArgOrBuilderList() {
        if (chiArgBuilder_ != null) {
          return chiArgBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chiArg_);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public packet.mj.MJ.GameOperChiArg.Builder addChiArgBuilder() {
        return getChiArgFieldBuilder().addBuilder(
            packet.mj.MJ.GameOperChiArg.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public packet.mj.MJ.GameOperChiArg.Builder addChiArgBuilder(
          int index) {
        return getChiArgFieldBuilder().addBuilder(
            index, packet.mj.MJ.GameOperChiArg.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperChiArg chiArg = 7;</code>
       */
      public java.util.List<packet.mj.MJ.GameOperChiArg.Builder> 
           getChiArgBuilderList() {
        return getChiArgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperChiArg, packet.mj.MJ.GameOperChiArg.Builder, packet.mj.MJ.GameOperChiArgOrBuilder> 
          getChiArgFieldBuilder() {
        if (chiArgBuilder_ == null) {
          chiArgBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.mj.MJ.GameOperChiArg, packet.mj.MJ.GameOperChiArg.Builder, packet.mj.MJ.GameOperChiArgOrBuilder>(
                  chiArg_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          chiArg_ = null;
        }
        return chiArgBuilder_;
      }

      // optional sint32 pengArg = 8;
      private int pengArg_ ;
      /**
       * <code>optional sint32 pengArg = 8;</code>
       *
       * <pre>
       *可以碰的牌，这里只传一张牌
       * </pre>
       */
      public boolean hasPengArg() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 pengArg = 8;</code>
       *
       * <pre>
       *可以碰的牌，这里只传一张牌
       * </pre>
       */
      public int getPengArg() {
        return pengArg_;
      }
      /**
       * <code>optional sint32 pengArg = 8;</code>
       *
       * <pre>
       *可以碰的牌，这里只传一张牌
       * </pre>
       */
      public Builder setPengArg(int value) {
        bitField0_ |= 0x00000080;
        pengArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 pengArg = 8;</code>
       *
       * <pre>
       *可以碰的牌，这里只传一张牌
       * </pre>
       */
      public Builder clearPengArg() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pengArg_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 lastActionPosition = 9;
      private int lastActionPosition_ ;
      /**
       * <code>optional sint32 lastActionPosition = 9;</code>
       *
       * <pre>
       *上一个行动的玩家位置
       * </pre>
       */
      public boolean hasLastActionPosition() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 lastActionPosition = 9;</code>
       *
       * <pre>
       *上一个行动的玩家位置
       * </pre>
       */
      public int getLastActionPosition() {
        return lastActionPosition_;
      }
      /**
       * <code>optional sint32 lastActionPosition = 9;</code>
       *
       * <pre>
       *上一个行动的玩家位置
       * </pre>
       */
      public Builder setLastActionPosition(int value) {
        bitField0_ |= 0x00000100;
        lastActionPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 lastActionPosition = 9;</code>
       *
       * <pre>
       *上一个行动的玩家位置
       * </pre>
       */
      public Builder clearLastActionPosition() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lastActionPosition_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 lastActionCard = 10;
      private int lastActionCard_ ;
      /**
       * <code>optional sint32 lastActionCard = 10;</code>
       *
       * <pre>
       *上一个行动的牌值
       * </pre>
       */
      public boolean hasLastActionCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 lastActionCard = 10;</code>
       *
       * <pre>
       *上一个行动的牌值
       * </pre>
       */
      public int getLastActionCard() {
        return lastActionCard_;
      }
      /**
       * <code>optional sint32 lastActionCard = 10;</code>
       *
       * <pre>
       *上一个行动的牌值
       * </pre>
       */
      public Builder setLastActionCard(int value) {
        bitField0_ |= 0x00000200;
        lastActionCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 lastActionCard = 10;</code>
       *
       * <pre>
       *上一个行动的牌值
       * </pre>
       */
      public Builder clearLastActionCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lastActionCard_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 mustZhiDui = 11;
      private int mustZhiDui_ ;
      /**
       * <code>optional sint32 mustZhiDui = 11;</code>
       *
       * <pre>
       *是否必须支队,非必须为0,必须为1
       * </pre>
       */
      public boolean hasMustZhiDui() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 mustZhiDui = 11;</code>
       *
       * <pre>
       *是否必须支队,非必须为0,必须为1
       * </pre>
       */
      public int getMustZhiDui() {
        return mustZhiDui_;
      }
      /**
       * <code>optional sint32 mustZhiDui = 11;</code>
       *
       * <pre>
       *是否必须支队,非必须为0,必须为1
       * </pre>
       */
      public Builder setMustZhiDui(int value) {
        bitField0_ |= 0x00000400;
        mustZhiDui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 mustZhiDui = 11;</code>
       *
       * <pre>
       *是否必须支队,非必须为0,必须为1
       * </pre>
       */
      public Builder clearMustZhiDui() {
        bitField0_ = (bitField0_ & ~0x00000400);
        mustZhiDui_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 seq = 100;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000800;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000800);
        seq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperPlayerActionNotify)
    }

    static {
      defaultInstance = new GameOperPlayerActionNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperPlayerActionNotify)
  }

  public interface GameOperAutoChuArgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 card = 1;
    /**
     * <code>required sint32 card = 1;</code>
     *
     * <pre>
     *上听或托管时，后端通知前端自动出牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>required sint32 card = 1;</code>
     *
     * <pre>
     *上听或托管时，后端通知前端自动出牌
     * </pre>
     */
    int getCard();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperAutoChuArg}
   */
  public static final class GameOperAutoChuArg extends
      com.google.protobuf.GeneratedMessage
      implements GameOperAutoChuArgOrBuilder {
    // Use GameOperAutoChuArg.newBuilder() to construct.
    private GameOperAutoChuArg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperAutoChuArg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperAutoChuArg defaultInstance;
    public static GameOperAutoChuArg getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperAutoChuArg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperAutoChuArg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              card_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperAutoChuArg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperAutoChuArg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperAutoChuArg.class, packet.mj.MJ.GameOperAutoChuArg.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperAutoChuArg> PARSER =
        new com.google.protobuf.AbstractParser<GameOperAutoChuArg>() {
      public GameOperAutoChuArg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperAutoChuArg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperAutoChuArg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private int card_;
    /**
     * <code>required sint32 card = 1;</code>
     *
     * <pre>
     *上听或托管时，后端通知前端自动出牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 card = 1;</code>
     *
     * <pre>
     *上听或托管时，后端通知前端自动出牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    private void initFields() {
      card_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, card_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, card_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperAutoChuArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperAutoChuArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperAutoChuArg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperAutoChuArgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperAutoChuArg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperAutoChuArg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperAutoChuArg.class, packet.mj.MJ.GameOperAutoChuArg.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperAutoChuArg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperAutoChuArg_descriptor;
      }

      public packet.mj.MJ.GameOperAutoChuArg getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperAutoChuArg.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperAutoChuArg build() {
        packet.mj.MJ.GameOperAutoChuArg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperAutoChuArg buildPartial() {
        packet.mj.MJ.GameOperAutoChuArg result = new packet.mj.MJ.GameOperAutoChuArg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card_ = card_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperAutoChuArg) {
          return mergeFrom((packet.mj.MJ.GameOperAutoChuArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperAutoChuArg other) {
        if (other == packet.mj.MJ.GameOperAutoChuArg.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCard()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperAutoChuArg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperAutoChuArg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 card = 1;
      private int card_ ;
      /**
       * <code>required sint32 card = 1;</code>
       *
       * <pre>
       *上听或托管时，后端通知前端自动出牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 card = 1;</code>
       *
       * <pre>
       *上听或托管时，后端通知前端自动出牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>required sint32 card = 1;</code>
       *
       * <pre>
       *上听或托管时，后端通知前端自动出牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000001;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 card = 1;</code>
       *
       * <pre>
       *上听或托管时，后端通知前端自动出牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperAutoChuArg)
    }

    static {
      defaultInstance = new GameOperAutoChuArg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperAutoChuArg)
  }

  public interface GameOperChiArgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 myCard1 = 1;
    /**
     * <code>required sint32 myCard1 = 1;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    boolean hasMyCard1();
    /**
     * <code>required sint32 myCard1 = 1;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    int getMyCard1();

    // required sint32 myCard2 = 2;
    /**
     * <code>required sint32 myCard2 = 2;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    boolean hasMyCard2();
    /**
     * <code>required sint32 myCard2 = 2;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    int getMyCard2();

    // required sint32 targetCard = 3;
    /**
     * <code>required sint32 targetCard = 3;</code>
     *
     * <pre>
     *吃的牌, 即别人打出让你吃的牌
     * </pre>
     */
    boolean hasTargetCard();
    /**
     * <code>required sint32 targetCard = 3;</code>
     *
     * <pre>
     *吃的牌, 即别人打出让你吃的牌
     * </pre>
     */
    int getTargetCard();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperChiArg}
   */
  public static final class GameOperChiArg extends
      com.google.protobuf.GeneratedMessage
      implements GameOperChiArgOrBuilder {
    // Use GameOperChiArg.newBuilder() to construct.
    private GameOperChiArg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperChiArg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperChiArg defaultInstance;
    public static GameOperChiArg getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperChiArg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperChiArg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              myCard1_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              myCard2_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetCard_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperChiArg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperChiArg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperChiArg.class, packet.mj.MJ.GameOperChiArg.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperChiArg> PARSER =
        new com.google.protobuf.AbstractParser<GameOperChiArg>() {
      public GameOperChiArg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperChiArg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperChiArg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 myCard1 = 1;
    public static final int MYCARD1_FIELD_NUMBER = 1;
    private int myCard1_;
    /**
     * <code>required sint32 myCard1 = 1;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    public boolean hasMyCard1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 myCard1 = 1;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    public int getMyCard1() {
      return myCard1_;
    }

    // required sint32 myCard2 = 2;
    public static final int MYCARD2_FIELD_NUMBER = 2;
    private int myCard2_;
    /**
     * <code>required sint32 myCard2 = 2;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    public boolean hasMyCard2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 myCard2 = 2;</code>
     *
     * <pre>
     *我的牌
     * </pre>
     */
    public int getMyCard2() {
      return myCard2_;
    }

    // required sint32 targetCard = 3;
    public static final int TARGETCARD_FIELD_NUMBER = 3;
    private int targetCard_;
    /**
     * <code>required sint32 targetCard = 3;</code>
     *
     * <pre>
     *吃的牌, 即别人打出让你吃的牌
     * </pre>
     */
    public boolean hasTargetCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required sint32 targetCard = 3;</code>
     *
     * <pre>
     *吃的牌, 即别人打出让你吃的牌
     * </pre>
     */
    public int getTargetCard() {
      return targetCard_;
    }

    private void initFields() {
      myCard1_ = 0;
      myCard2_ = 0;
      targetCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMyCard1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMyCard2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetCard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, myCard1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, myCard2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, targetCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, myCard1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, myCard2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, targetCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperChiArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperChiArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperChiArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperChiArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperChiArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperChiArg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperChiArgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperChiArg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperChiArg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperChiArg.class, packet.mj.MJ.GameOperChiArg.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperChiArg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        myCard1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        myCard2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperChiArg_descriptor;
      }

      public packet.mj.MJ.GameOperChiArg getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperChiArg.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperChiArg build() {
        packet.mj.MJ.GameOperChiArg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperChiArg buildPartial() {
        packet.mj.MJ.GameOperChiArg result = new packet.mj.MJ.GameOperChiArg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.myCard1_ = myCard1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.myCard2_ = myCard2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetCard_ = targetCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperChiArg) {
          return mergeFrom((packet.mj.MJ.GameOperChiArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperChiArg other) {
        if (other == packet.mj.MJ.GameOperChiArg.getDefaultInstance()) return this;
        if (other.hasMyCard1()) {
          setMyCard1(other.getMyCard1());
        }
        if (other.hasMyCard2()) {
          setMyCard2(other.getMyCard2());
        }
        if (other.hasTargetCard()) {
          setTargetCard(other.getTargetCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMyCard1()) {
          
          return false;
        }
        if (!hasMyCard2()) {
          
          return false;
        }
        if (!hasTargetCard()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperChiArg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperChiArg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 myCard1 = 1;
      private int myCard1_ ;
      /**
       * <code>required sint32 myCard1 = 1;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public boolean hasMyCard1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 myCard1 = 1;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public int getMyCard1() {
        return myCard1_;
      }
      /**
       * <code>required sint32 myCard1 = 1;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public Builder setMyCard1(int value) {
        bitField0_ |= 0x00000001;
        myCard1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 myCard1 = 1;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public Builder clearMyCard1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        myCard1_ = 0;
        onChanged();
        return this;
      }

      // required sint32 myCard2 = 2;
      private int myCard2_ ;
      /**
       * <code>required sint32 myCard2 = 2;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public boolean hasMyCard2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 myCard2 = 2;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public int getMyCard2() {
        return myCard2_;
      }
      /**
       * <code>required sint32 myCard2 = 2;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public Builder setMyCard2(int value) {
        bitField0_ |= 0x00000002;
        myCard2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 myCard2 = 2;</code>
       *
       * <pre>
       *我的牌
       * </pre>
       */
      public Builder clearMyCard2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        myCard2_ = 0;
        onChanged();
        return this;
      }

      // required sint32 targetCard = 3;
      private int targetCard_ ;
      /**
       * <code>required sint32 targetCard = 3;</code>
       *
       * <pre>
       *吃的牌, 即别人打出让你吃的牌
       * </pre>
       */
      public boolean hasTargetCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required sint32 targetCard = 3;</code>
       *
       * <pre>
       *吃的牌, 即别人打出让你吃的牌
       * </pre>
       */
      public int getTargetCard() {
        return targetCard_;
      }
      /**
       * <code>required sint32 targetCard = 3;</code>
       *
       * <pre>
       *吃的牌, 即别人打出让你吃的牌
       * </pre>
       */
      public Builder setTargetCard(int value) {
        bitField0_ |= 0x00000004;
        targetCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 targetCard = 3;</code>
       *
       * <pre>
       *吃的牌, 即别人打出让你吃的牌
       * </pre>
       */
      public Builder clearTargetCard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetCard_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperChiArg)
    }

    static {
      defaultInstance = new GameOperChiArg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperChiArg)
  }

  public interface GameOperBaoChangeSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 oldBao = 1;
    /**
     * <code>required sint32 oldBao = 1;</code>
     *
     * <pre>
     *旧的宝
     * </pre>
     */
    boolean hasOldBao();
    /**
     * <code>required sint32 oldBao = 1;</code>
     *
     * <pre>
     *旧的宝
     * </pre>
     */
    int getOldBao();

    // optional sint32 position = 2;
    /**
     * <code>optional sint32 position = 2;</code>
     *
     * <pre>
     *换宝玩家
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional sint32 position = 2;</code>
     *
     * <pre>
     *换宝玩家
     * </pre>
     */
    int getPosition();

    // optional sint32 dice = 3;
    /**
     * <code>optional sint32 dice = 3;</code>
     *
     * <pre>
     *随机数
     * </pre>
     */
    boolean hasDice();
    /**
     * <code>optional sint32 dice = 3;</code>
     *
     * <pre>
     *随机数
     * </pre>
     */
    int getDice();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperBaoChangeSyn}
   *
   * <pre>
   *服务器通知客户端宝已换 operType=BAO_CHANGE_SYN
   * </pre>
   */
  public static final class GameOperBaoChangeSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperBaoChangeSynOrBuilder {
    // Use GameOperBaoChangeSyn.newBuilder() to construct.
    private GameOperBaoChangeSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperBaoChangeSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperBaoChangeSyn defaultInstance;
    public static GameOperBaoChangeSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperBaoChangeSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperBaoChangeSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              oldBao_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              position_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dice_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperBaoChangeSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperBaoChangeSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperBaoChangeSyn.class, packet.mj.MJ.GameOperBaoChangeSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperBaoChangeSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperBaoChangeSyn>() {
      public GameOperBaoChangeSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperBaoChangeSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperBaoChangeSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 oldBao = 1;
    public static final int OLDBAO_FIELD_NUMBER = 1;
    private int oldBao_;
    /**
     * <code>required sint32 oldBao = 1;</code>
     *
     * <pre>
     *旧的宝
     * </pre>
     */
    public boolean hasOldBao() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 oldBao = 1;</code>
     *
     * <pre>
     *旧的宝
     * </pre>
     */
    public int getOldBao() {
      return oldBao_;
    }

    // optional sint32 position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <code>optional sint32 position = 2;</code>
     *
     * <pre>
     *换宝玩家
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 position = 2;</code>
     *
     * <pre>
     *换宝玩家
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // optional sint32 dice = 3;
    public static final int DICE_FIELD_NUMBER = 3;
    private int dice_;
    /**
     * <code>optional sint32 dice = 3;</code>
     *
     * <pre>
     *随机数
     * </pre>
     */
    public boolean hasDice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 dice = 3;</code>
     *
     * <pre>
     *随机数
     * </pre>
     */
    public int getDice() {
      return dice_;
    }

    private void initFields() {
      oldBao_ = 0;
      position_ = 0;
      dice_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOldBao()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, oldBao_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, dice_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, oldBao_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, dice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperBaoChangeSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperBaoChangeSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperBaoChangeSyn}
     *
     * <pre>
     *服务器通知客户端宝已换 operType=BAO_CHANGE_SYN
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperBaoChangeSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperBaoChangeSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperBaoChangeSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperBaoChangeSyn.class, packet.mj.MJ.GameOperBaoChangeSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperBaoChangeSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        oldBao_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperBaoChangeSyn_descriptor;
      }

      public packet.mj.MJ.GameOperBaoChangeSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperBaoChangeSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperBaoChangeSyn build() {
        packet.mj.MJ.GameOperBaoChangeSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperBaoChangeSyn buildPartial() {
        packet.mj.MJ.GameOperBaoChangeSyn result = new packet.mj.MJ.GameOperBaoChangeSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oldBao_ = oldBao_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dice_ = dice_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperBaoChangeSyn) {
          return mergeFrom((packet.mj.MJ.GameOperBaoChangeSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperBaoChangeSyn other) {
        if (other == packet.mj.MJ.GameOperBaoChangeSyn.getDefaultInstance()) return this;
        if (other.hasOldBao()) {
          setOldBao(other.getOldBao());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasDice()) {
          setDice(other.getDice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOldBao()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperBaoChangeSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperBaoChangeSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 oldBao = 1;
      private int oldBao_ ;
      /**
       * <code>required sint32 oldBao = 1;</code>
       *
       * <pre>
       *旧的宝
       * </pre>
       */
      public boolean hasOldBao() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 oldBao = 1;</code>
       *
       * <pre>
       *旧的宝
       * </pre>
       */
      public int getOldBao() {
        return oldBao_;
      }
      /**
       * <code>required sint32 oldBao = 1;</code>
       *
       * <pre>
       *旧的宝
       * </pre>
       */
      public Builder setOldBao(int value) {
        bitField0_ |= 0x00000001;
        oldBao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 oldBao = 1;</code>
       *
       * <pre>
       *旧的宝
       * </pre>
       */
      public Builder clearOldBao() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oldBao_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 position = 2;
      private int position_ ;
      /**
       * <code>optional sint32 position = 2;</code>
       *
       * <pre>
       *换宝玩家
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 position = 2;</code>
       *
       * <pre>
       *换宝玩家
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional sint32 position = 2;</code>
       *
       * <pre>
       *换宝玩家
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000002;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 position = 2;</code>
       *
       * <pre>
       *换宝玩家
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 dice = 3;
      private int dice_ ;
      /**
       * <code>optional sint32 dice = 3;</code>
       *
       * <pre>
       *随机数
       * </pre>
       */
      public boolean hasDice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 dice = 3;</code>
       *
       * <pre>
       *随机数
       * </pre>
       */
      public int getDice() {
        return dice_;
      }
      /**
       * <code>optional sint32 dice = 3;</code>
       *
       * <pre>
       *随机数
       * </pre>
       */
      public Builder setDice(int value) {
        bitField0_ |= 0x00000004;
        dice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 dice = 3;</code>
       *
       * <pre>
       *随机数
       * </pre>
       */
      public Builder clearDice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dice_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperBaoChangeSyn)
    }

    static {
      defaultInstance = new GameOperBaoChangeSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperBaoChangeSyn)
  }

  public interface GameOperPlayerHuSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    int getPosition();

    // optional sint32 card = 2;
    /**
     * <code>optional sint32 card = 2;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional sint32 card = 2;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    int getCard();

    // optional sint32 bao = 3;
    /**
     * <code>optional sint32 bao = 3;</code>
     *
     * <pre>
     *宝牌
     * </pre>
     */
    boolean hasBao();
    /**
     * <code>optional sint32 bao = 3;</code>
     *
     * <pre>
     *宝牌
     * </pre>
     */
    int getBao();

    // repeated .packet.mj.GameOperPlayerSettle detail = 4;
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    java.util.List<packet.mj.MJ.GameOperPlayerSettle> 
        getDetailList();
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    packet.mj.MJ.GameOperPlayerSettle getDetail(int index);
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    int getDetailCount();
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    java.util.List<? extends packet.mj.MJ.GameOperPlayerSettleOrBuilder> 
        getDetailOrBuilderList();
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    packet.mj.MJ.GameOperPlayerSettleOrBuilder getDetailOrBuilder(
        int index);

    // optional sint32 resultType = 5;
    /**
     * <code>optional sint32 resultType = 5;</code>
     *
     * <pre>
     *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
     * </pre>
     */
    boolean hasResultType();
    /**
     * <code>optional sint32 resultType = 5;</code>
     *
     * <pre>
     *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
     * </pre>
     */
    int getResultType();

    // optional sint32 paoPosition = 6;
    /**
     * <code>optional sint32 paoPosition = 6;</code>
     */
    boolean hasPaoPosition();
    /**
     * <code>optional sint32 paoPosition = 6;</code>
     */
    int getPaoPosition();

    // optional bool skipHuSettle = 7;
    /**
     * <code>optional bool skipHuSettle = 7;</code>
     *
     * <pre>
     *是否显示胡牌信息
     * </pre>
     */
    boolean hasSkipHuSettle();
    /**
     * <code>optional bool skipHuSettle = 7;</code>
     *
     * <pre>
     *是否显示胡牌信息
     * </pre>
     */
    boolean getSkipHuSettle();

    // optional sint32 winType = 8;
    /**
     * <code>optional sint32 winType = 8;</code>
     *
     * <pre>
     *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
     * </pre>
     */
    boolean hasWinType();
    /**
     * <code>optional sint32 winType = 8;</code>
     *
     * <pre>
     *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
     * </pre>
     */
    int getWinType();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperPlayerHuSyn}
   *
   * <pre>
   *同步胡牌信息 operType=HU
   * </pre>
   */
  public static final class GameOperPlayerHuSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperPlayerHuSynOrBuilder {
    // Use GameOperPlayerHuSyn.newBuilder() to construct.
    private GameOperPlayerHuSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperPlayerHuSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperPlayerHuSyn defaultInstance;
    public static GameOperPlayerHuSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperPlayerHuSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperPlayerHuSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              card_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bao_ = input.readSInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                detail_ = new java.util.ArrayList<packet.mj.MJ.GameOperPlayerSettle>();
                mutable_bitField0_ |= 0x00000008;
              }
              detail_.add(input.readMessage(packet.mj.MJ.GameOperPlayerSettle.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              resultType_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              paoPosition_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              skipHuSettle_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              winType_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          detail_ = java.util.Collections.unmodifiableList(detail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerHuSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerHuSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperPlayerHuSyn.class, packet.mj.MJ.GameOperPlayerHuSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperPlayerHuSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperPlayerHuSyn>() {
      public GameOperPlayerHuSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperPlayerHuSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperPlayerHuSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // optional sint32 card = 2;
    public static final int CARD_FIELD_NUMBER = 2;
    private int card_;
    /**
     * <code>optional sint32 card = 2;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 card = 2;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional sint32 bao = 3;
    public static final int BAO_FIELD_NUMBER = 3;
    private int bao_;
    /**
     * <code>optional sint32 bao = 3;</code>
     *
     * <pre>
     *宝牌
     * </pre>
     */
    public boolean hasBao() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 bao = 3;</code>
     *
     * <pre>
     *宝牌
     * </pre>
     */
    public int getBao() {
      return bao_;
    }

    // repeated .packet.mj.GameOperPlayerSettle detail = 4;
    public static final int DETAIL_FIELD_NUMBER = 4;
    private java.util.List<packet.mj.MJ.GameOperPlayerSettle> detail_;
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public java.util.List<packet.mj.MJ.GameOperPlayerSettle> getDetailList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public java.util.List<? extends packet.mj.MJ.GameOperPlayerSettleOrBuilder> 
        getDetailOrBuilderList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public int getDetailCount() {
      return detail_.size();
    }
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public packet.mj.MJ.GameOperPlayerSettle getDetail(int index) {
      return detail_.get(index);
    }
    /**
     * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public packet.mj.MJ.GameOperPlayerSettleOrBuilder getDetailOrBuilder(
        int index) {
      return detail_.get(index);
    }

    // optional sint32 resultType = 5;
    public static final int RESULTTYPE_FIELD_NUMBER = 5;
    private int resultType_;
    /**
     * <code>optional sint32 resultType = 5;</code>
     *
     * <pre>
     *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
     * </pre>
     */
    public boolean hasResultType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 resultType = 5;</code>
     *
     * <pre>
     *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
     * </pre>
     */
    public int getResultType() {
      return resultType_;
    }

    // optional sint32 paoPosition = 6;
    public static final int PAOPOSITION_FIELD_NUMBER = 6;
    private int paoPosition_;
    /**
     * <code>optional sint32 paoPosition = 6;</code>
     */
    public boolean hasPaoPosition() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 paoPosition = 6;</code>
     */
    public int getPaoPosition() {
      return paoPosition_;
    }

    // optional bool skipHuSettle = 7;
    public static final int SKIPHUSETTLE_FIELD_NUMBER = 7;
    private boolean skipHuSettle_;
    /**
     * <code>optional bool skipHuSettle = 7;</code>
     *
     * <pre>
     *是否显示胡牌信息
     * </pre>
     */
    public boolean hasSkipHuSettle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool skipHuSettle = 7;</code>
     *
     * <pre>
     *是否显示胡牌信息
     * </pre>
     */
    public boolean getSkipHuSettle() {
      return skipHuSettle_;
    }

    // optional sint32 winType = 8;
    public static final int WINTYPE_FIELD_NUMBER = 8;
    private int winType_;
    /**
     * <code>optional sint32 winType = 8;</code>
     *
     * <pre>
     *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
     * </pre>
     */
    public boolean hasWinType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 winType = 8;</code>
     *
     * <pre>
     *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
     * </pre>
     */
    public int getWinType() {
      return winType_;
    }

    private void initFields() {
      position_ = 0;
      card_ = 0;
      bao_ = 0;
      detail_ = java.util.Collections.emptyList();
      resultType_ = 0;
      paoPosition_ = 0;
      skipHuSettle_ = false;
      winType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, card_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, bao_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        output.writeMessage(4, detail_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(5, resultType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(6, paoPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, skipHuSettle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, winType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, card_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, bao_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, detail_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, resultType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, paoPosition_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, skipHuSettle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, winType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerHuSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperPlayerHuSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperPlayerHuSyn}
     *
     * <pre>
     *同步胡牌信息 operType=HU
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperPlayerHuSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerHuSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerHuSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperPlayerHuSyn.class, packet.mj.MJ.GameOperPlayerHuSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperPlayerHuSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bao_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          detailBuilder_.clear();
        }
        resultType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        paoPosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        skipHuSettle_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        winType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerHuSyn_descriptor;
      }

      public packet.mj.MJ.GameOperPlayerHuSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperPlayerHuSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperPlayerHuSyn build() {
        packet.mj.MJ.GameOperPlayerHuSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperPlayerHuSyn buildPartial() {
        packet.mj.MJ.GameOperPlayerHuSyn result = new packet.mj.MJ.GameOperPlayerHuSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bao_ = bao_;
        if (detailBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            detail_ = java.util.Collections.unmodifiableList(detail_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultType_ = resultType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.paoPosition_ = paoPosition_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.skipHuSettle_ = skipHuSettle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winType_ = winType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperPlayerHuSyn) {
          return mergeFrom((packet.mj.MJ.GameOperPlayerHuSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperPlayerHuSyn other) {
        if (other == packet.mj.MJ.GameOperPlayerHuSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasBao()) {
          setBao(other.getBao());
        }
        if (detailBuilder_ == null) {
          if (!other.detail_.isEmpty()) {
            if (detail_.isEmpty()) {
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDetailIsMutable();
              detail_.addAll(other.detail_);
            }
            onChanged();
          }
        } else {
          if (!other.detail_.isEmpty()) {
            if (detailBuilder_.isEmpty()) {
              detailBuilder_.dispose();
              detailBuilder_ = null;
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000008);
              detailBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailFieldBuilder() : null;
            } else {
              detailBuilder_.addAllMessages(other.detail_);
            }
          }
        }
        if (other.hasResultType()) {
          setResultType(other.getResultType());
        }
        if (other.hasPaoPosition()) {
          setPaoPosition(other.getPaoPosition());
        }
        if (other.hasSkipHuSettle()) {
          setSkipHuSettle(other.getSkipHuSettle());
        }
        if (other.hasWinType()) {
          setWinType(other.getWinType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperPlayerHuSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperPlayerHuSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 card = 2;
      private int card_ ;
      /**
       * <code>optional sint32 card = 2;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 card = 2;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional sint32 card = 2;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000002;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 card = 2;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000002);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 bao = 3;
      private int bao_ ;
      /**
       * <code>optional sint32 bao = 3;</code>
       *
       * <pre>
       *宝牌
       * </pre>
       */
      public boolean hasBao() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 bao = 3;</code>
       *
       * <pre>
       *宝牌
       * </pre>
       */
      public int getBao() {
        return bao_;
      }
      /**
       * <code>optional sint32 bao = 3;</code>
       *
       * <pre>
       *宝牌
       * </pre>
       */
      public Builder setBao(int value) {
        bitField0_ |= 0x00000004;
        bao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 bao = 3;</code>
       *
       * <pre>
       *宝牌
       * </pre>
       */
      public Builder clearBao() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bao_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.mj.GameOperPlayerSettle detail = 4;
      private java.util.List<packet.mj.MJ.GameOperPlayerSettle> detail_ =
        java.util.Collections.emptyList();
      private void ensureDetailIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          detail_ = new java.util.ArrayList<packet.mj.MJ.GameOperPlayerSettle>(detail_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperPlayerSettle, packet.mj.MJ.GameOperPlayerSettle.Builder, packet.mj.MJ.GameOperPlayerSettleOrBuilder> detailBuilder_;

      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<packet.mj.MJ.GameOperPlayerSettle> getDetailList() {
        if (detailBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detail_);
        } else {
          return detailBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public int getDetailCount() {
        if (detailBuilder_ == null) {
          return detail_.size();
        } else {
          return detailBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.mj.MJ.GameOperPlayerSettle getDetail(int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);
        } else {
          return detailBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder setDetail(
          int index, packet.mj.MJ.GameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.set(index, value);
          onChanged();
        } else {
          detailBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder setDetail(
          int index, packet.mj.MJ.GameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(packet.mj.MJ.GameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(value);
          onChanged();
        } else {
          detailBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          int index, packet.mj.MJ.GameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(index, value);
          onChanged();
        } else {
          detailBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          packet.mj.MJ.GameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          int index, packet.mj.MJ.GameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addAllDetail(
          java.lang.Iterable<? extends packet.mj.MJ.GameOperPlayerSettle> values) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          super.addAll(values, detail_);
          onChanged();
        } else {
          detailBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          detailBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder removeDetail(int index) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.remove(index);
          onChanged();
        } else {
          detailBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.mj.MJ.GameOperPlayerSettle.Builder getDetailBuilder(
          int index) {
        return getDetailFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.mj.MJ.GameOperPlayerSettleOrBuilder getDetailOrBuilder(
          int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);  } else {
          return detailBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<? extends packet.mj.MJ.GameOperPlayerSettleOrBuilder> 
           getDetailOrBuilderList() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detail_);
        }
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.mj.MJ.GameOperPlayerSettle.Builder addDetailBuilder() {
        return getDetailFieldBuilder().addBuilder(
            packet.mj.MJ.GameOperPlayerSettle.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.mj.MJ.GameOperPlayerSettle.Builder addDetailBuilder(
          int index) {
        return getDetailFieldBuilder().addBuilder(
            index, packet.mj.MJ.GameOperPlayerSettle.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.GameOperPlayerSettle detail = 4;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<packet.mj.MJ.GameOperPlayerSettle.Builder> 
           getDetailBuilderList() {
        return getDetailFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.GameOperPlayerSettle, packet.mj.MJ.GameOperPlayerSettle.Builder, packet.mj.MJ.GameOperPlayerSettleOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.mj.MJ.GameOperPlayerSettle, packet.mj.MJ.GameOperPlayerSettle.Builder, packet.mj.MJ.GameOperPlayerSettleOrBuilder>(
                  detail_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }

      // optional sint32 resultType = 5;
      private int resultType_ ;
      /**
       * <code>optional sint32 resultType = 5;</code>
       *
       * <pre>
       *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
       * </pre>
       */
      public boolean hasResultType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 resultType = 5;</code>
       *
       * <pre>
       *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
       * </pre>
       */
      public int getResultType() {
        return resultType_;
      }
      /**
       * <code>optional sint32 resultType = 5;</code>
       *
       * <pre>
       *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
       * </pre>
       */
      public Builder setResultType(int value) {
        bitField0_ |= 0x00000010;
        resultType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 resultType = 5;</code>
       *
       * <pre>
       *0x100000:胡牌      0x200000:输了    0x400000:流局     0x0002:点炮    0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡
       * </pre>
       */
      public Builder clearResultType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        resultType_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 paoPosition = 6;
      private int paoPosition_ ;
      /**
       * <code>optional sint32 paoPosition = 6;</code>
       */
      public boolean hasPaoPosition() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 paoPosition = 6;</code>
       */
      public int getPaoPosition() {
        return paoPosition_;
      }
      /**
       * <code>optional sint32 paoPosition = 6;</code>
       */
      public Builder setPaoPosition(int value) {
        bitField0_ |= 0x00000020;
        paoPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 paoPosition = 6;</code>
       */
      public Builder clearPaoPosition() {
        bitField0_ = (bitField0_ & ~0x00000020);
        paoPosition_ = 0;
        onChanged();
        return this;
      }

      // optional bool skipHuSettle = 7;
      private boolean skipHuSettle_ ;
      /**
       * <code>optional bool skipHuSettle = 7;</code>
       *
       * <pre>
       *是否显示胡牌信息
       * </pre>
       */
      public boolean hasSkipHuSettle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool skipHuSettle = 7;</code>
       *
       * <pre>
       *是否显示胡牌信息
       * </pre>
       */
      public boolean getSkipHuSettle() {
        return skipHuSettle_;
      }
      /**
       * <code>optional bool skipHuSettle = 7;</code>
       *
       * <pre>
       *是否显示胡牌信息
       * </pre>
       */
      public Builder setSkipHuSettle(boolean value) {
        bitField0_ |= 0x00000040;
        skipHuSettle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool skipHuSettle = 7;</code>
       *
       * <pre>
       *是否显示胡牌信息
       * </pre>
       */
      public Builder clearSkipHuSettle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        skipHuSettle_ = false;
        onChanged();
        return this;
      }

      // optional sint32 winType = 8;
      private int winType_ ;
      /**
       * <code>optional sint32 winType = 8;</code>
       *
       * <pre>
       *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
       * </pre>
       */
      public boolean hasWinType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 winType = 8;</code>
       *
       * <pre>
       *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
       * </pre>
       */
      public int getWinType() {
        return winType_;
      }
      /**
       * <code>optional sint32 winType = 8;</code>
       *
       * <pre>
       *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
       * </pre>
       */
      public Builder setWinType(int value) {
        bitField0_ |= 0x00000080;
        winType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 winType = 8;</code>
       *
       * <pre>
       *0x100000:胡牌  0x400000:流局  0x0080:宝中宝    0x0020:摸宝胡      0x0800:开牌炸      0x0400刮大风     0x2000:红中满天飞        0x4000:带漏胡  0x0008:自摸
       * </pre>
       */
      public Builder clearWinType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        winType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperPlayerHuSyn)
    }

    static {
      defaultInstance = new GameOperPlayerHuSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperPlayerHuSyn)
  }

  public interface GameOperPlayerSettleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint32 position = 1;
    /**
     * <code>optional sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPosition();

    // repeated sint32 handcard = 2;
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandcardList();
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandcardCount();
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandcard(int index);

    // optional sint32 fanType = 4;
    /**
     * <code>optional sint32 fanType = 4;</code>
     *
     * <pre>
     *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
     * </pre>
     */
    boolean hasFanType();
    /**
     * <code>optional sint32 fanType = 4;</code>
     *
     * <pre>
     *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
     * </pre>
     */
    int getFanType();

    // optional sint32 fanNum = 5;
    /**
     * <code>optional sint32 fanNum = 5;</code>
     *
     * <pre>
     *番数	
     * </pre>
     */
    boolean hasFanNum();
    /**
     * <code>optional sint32 fanNum = 5;</code>
     *
     * <pre>
     *番数	
     * </pre>
     */
    int getFanNum();

    // repeated string fanDetail = 6;
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    java.util.List<java.lang.String>
    getFanDetailList();
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    int getFanDetailCount();
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    java.lang.String getFanDetail(int index);
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getFanDetailBytes(int index);

    // optional sint32 coin = 7;
    /**
     * <code>optional sint32 coin = 7;</code>
     *
     * <pre>
     *金币 普通场
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional sint32 coin = 7;</code>
     *
     * <pre>
     *金币 普通场
     * </pre>
     */
    int getCoin();

    // optional sint32 score = 8;
    /**
     * <code>optional sint32 score = 8;</code>
     *
     * <pre>
     *积分 vip场
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional sint32 score = 8;</code>
     *
     * <pre>
     *积分 vip场
     * </pre>
     */
    int getScore();
  }
  /**
   * Protobuf type {@code packet.mj.GameOperPlayerSettle}
   */
  public static final class GameOperPlayerSettle extends
      com.google.protobuf.GeneratedMessage
      implements GameOperPlayerSettleOrBuilder {
    // Use GameOperPlayerSettle.newBuilder() to construct.
    private GameOperPlayerSettle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperPlayerSettle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperPlayerSettle defaultInstance;
    public static GameOperPlayerSettle getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperPlayerSettle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperPlayerSettle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handcard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              handcard_.add(input.readSInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                handcard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                handcard_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              fanType_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              fanNum_ = input.readSInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                fanDetail_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              fanDetail_.add(input.readBytes());
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              coin_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              score_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handcard_ = java.util.Collections.unmodifiableList(handcard_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          fanDetail_ = new com.google.protobuf.UnmodifiableLazyStringList(fanDetail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerSettle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerSettle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperPlayerSettle.class, packet.mj.MJ.GameOperPlayerSettle.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperPlayerSettle> PARSER =
        new com.google.protobuf.AbstractParser<GameOperPlayerSettle>() {
      public GameOperPlayerSettle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperPlayerSettle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperPlayerSettle> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>optional sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // repeated sint32 handcard = 2;
    public static final int HANDCARD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> handcard_;
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandcardList() {
      return handcard_;
    }
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandcardCount() {
      return handcard_.size();
    }
    /**
     * <code>repeated sint32 handcard = 2;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandcard(int index) {
      return handcard_.get(index);
    }

    // optional sint32 fanType = 4;
    public static final int FANTYPE_FIELD_NUMBER = 4;
    private int fanType_;
    /**
     * <code>optional sint32 fanType = 4;</code>
     *
     * <pre>
     *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
     * </pre>
     */
    public boolean hasFanType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 fanType = 4;</code>
     *
     * <pre>
     *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
     * </pre>
     */
    public int getFanType() {
      return fanType_;
    }

    // optional sint32 fanNum = 5;
    public static final int FANNUM_FIELD_NUMBER = 5;
    private int fanNum_;
    /**
     * <code>optional sint32 fanNum = 5;</code>
     *
     * <pre>
     *番数	
     * </pre>
     */
    public boolean hasFanNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 fanNum = 5;</code>
     *
     * <pre>
     *番数	
     * </pre>
     */
    public int getFanNum() {
      return fanNum_;
    }

    // repeated string fanDetail = 6;
    public static final int FANDETAIL_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList fanDetail_;
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    public java.util.List<java.lang.String>
        getFanDetailList() {
      return fanDetail_;
    }
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    public int getFanDetailCount() {
      return fanDetail_.size();
    }
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    public java.lang.String getFanDetail(int index) {
      return fanDetail_.get(index);
    }
    /**
     * <code>repeated string fanDetail = 6;</code>
     *
     * <pre>
     *番型描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFanDetailBytes(int index) {
      return fanDetail_.getByteString(index);
    }

    // optional sint32 coin = 7;
    public static final int COIN_FIELD_NUMBER = 7;
    private int coin_;
    /**
     * <code>optional sint32 coin = 7;</code>
     *
     * <pre>
     *金币 普通场
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 coin = 7;</code>
     *
     * <pre>
     *金币 普通场
     * </pre>
     */
    public int getCoin() {
      return coin_;
    }

    // optional sint32 score = 8;
    public static final int SCORE_FIELD_NUMBER = 8;
    private int score_;
    /**
     * <code>optional sint32 score = 8;</code>
     *
     * <pre>
     *积分 vip场
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 score = 8;</code>
     *
     * <pre>
     *积分 vip场
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    private void initFields() {
      position_ = 0;
      handcard_ = java.util.Collections.emptyList();
      fanType_ = 0;
      fanNum_ = 0;
      fanDetail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      coin_ = 0;
      score_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      for (int i = 0; i < handcard_.size(); i++) {
        output.writeSInt32(2, handcard_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(4, fanType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(5, fanNum_);
      }
      for (int i = 0; i < fanDetail_.size(); i++) {
        output.writeBytes(6, fanDetail_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(7, coin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(8, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handcard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(handcard_.get(i));
        }
        size += dataSize;
        size += 1 * getHandcardList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, fanType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, fanNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fanDetail_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(fanDetail_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFanDetailList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, coin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperPlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperPlayerSettle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperPlayerSettle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperPlayerSettleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerSettle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerSettle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperPlayerSettle.class, packet.mj.MJ.GameOperPlayerSettle.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperPlayerSettle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        handcard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        fanType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fanNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fanDetail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        coin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperPlayerSettle_descriptor;
      }

      public packet.mj.MJ.GameOperPlayerSettle getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperPlayerSettle.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperPlayerSettle build() {
        packet.mj.MJ.GameOperPlayerSettle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperPlayerSettle buildPartial() {
        packet.mj.MJ.GameOperPlayerSettle result = new packet.mj.MJ.GameOperPlayerSettle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          handcard_ = java.util.Collections.unmodifiableList(handcard_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.handcard_ = handcard_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fanType_ = fanType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fanNum_ = fanNum_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          fanDetail_ = new com.google.protobuf.UnmodifiableLazyStringList(
              fanDetail_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.fanDetail_ = fanDetail_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperPlayerSettle) {
          return mergeFrom((packet.mj.MJ.GameOperPlayerSettle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperPlayerSettle other) {
        if (other == packet.mj.MJ.GameOperPlayerSettle.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (!other.handcard_.isEmpty()) {
          if (handcard_.isEmpty()) {
            handcard_ = other.handcard_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandcardIsMutable();
            handcard_.addAll(other.handcard_);
          }
          onChanged();
        }
        if (other.hasFanType()) {
          setFanType(other.getFanType());
        }
        if (other.hasFanNum()) {
          setFanNum(other.getFanNum());
        }
        if (!other.fanDetail_.isEmpty()) {
          if (fanDetail_.isEmpty()) {
            fanDetail_ = other.fanDetail_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFanDetailIsMutable();
            fanDetail_.addAll(other.fanDetail_);
          }
          onChanged();
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperPlayerSettle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperPlayerSettle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint32 position = 1;
      private int position_ ;
      /**
       * <code>optional sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 handcard = 2;
      private java.util.List<java.lang.Integer> handcard_ = java.util.Collections.emptyList();
      private void ensureHandcardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handcard_ = new java.util.ArrayList<java.lang.Integer>(handcard_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandcardList() {
        return java.util.Collections.unmodifiableList(handcard_);
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandcardCount() {
        return handcard_.size();
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandcard(int index) {
        return handcard_.get(index);
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder setHandcard(
          int index, int value) {
        ensureHandcardIsMutable();
        handcard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addHandcard(int value) {
        ensureHandcardIsMutable();
        handcard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addAllHandcard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandcardIsMutable();
        super.addAll(values, handcard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 2;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder clearHandcard() {
        handcard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional sint32 fanType = 4;
      private int fanType_ ;
      /**
       * <code>optional sint32 fanType = 4;</code>
       *
       * <pre>
       *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
       * </pre>
       */
      public boolean hasFanType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 fanType = 4;</code>
       *
       * <pre>
       *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
       * </pre>
       */
      public int getFanType() {
        return fanType_;
      }
      /**
       * <code>optional sint32 fanType = 4;</code>
       *
       * <pre>
       *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
       * </pre>
       */
      public Builder setFanType(int value) {
        bitField0_ |= 0x00000004;
        fanType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 fanType = 4;</code>
       *
       * <pre>
       *番型 0x0010:夹胡  0x0020:摸宝 0x0080:宝中宝 0x0008:自摸 0x100000:赢  0x200000:输  0x0100:已上听 0x0002:点炮 0x0001:门清  0x0004:我是庄家 0x0200:对手是庄家
       * </pre>
       */
      public Builder clearFanType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fanType_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 fanNum = 5;
      private int fanNum_ ;
      /**
       * <code>optional sint32 fanNum = 5;</code>
       *
       * <pre>
       *番数	
       * </pre>
       */
      public boolean hasFanNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 fanNum = 5;</code>
       *
       * <pre>
       *番数	
       * </pre>
       */
      public int getFanNum() {
        return fanNum_;
      }
      /**
       * <code>optional sint32 fanNum = 5;</code>
       *
       * <pre>
       *番数	
       * </pre>
       */
      public Builder setFanNum(int value) {
        bitField0_ |= 0x00000008;
        fanNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 fanNum = 5;</code>
       *
       * <pre>
       *番数	
       * </pre>
       */
      public Builder clearFanNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fanNum_ = 0;
        onChanged();
        return this;
      }

      // repeated string fanDetail = 6;
      private com.google.protobuf.LazyStringList fanDetail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFanDetailIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          fanDetail_ = new com.google.protobuf.LazyStringArrayList(fanDetail_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public java.util.List<java.lang.String>
          getFanDetailList() {
        return java.util.Collections.unmodifiableList(fanDetail_);
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public int getFanDetailCount() {
        return fanDetail_.size();
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public java.lang.String getFanDetail(int index) {
        return fanDetail_.get(index);
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFanDetailBytes(int index) {
        return fanDetail_.getByteString(index);
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public Builder setFanDetail(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFanDetailIsMutable();
        fanDetail_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public Builder addFanDetail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFanDetailIsMutable();
        fanDetail_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public Builder addAllFanDetail(
          java.lang.Iterable<java.lang.String> values) {
        ensureFanDetailIsMutable();
        super.addAll(values, fanDetail_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public Builder clearFanDetail() {
        fanDetail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string fanDetail = 6;</code>
       *
       * <pre>
       *番型描述
       * </pre>
       */
      public Builder addFanDetailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFanDetailIsMutable();
        fanDetail_.add(value);
        onChanged();
        return this;
      }

      // optional sint32 coin = 7;
      private int coin_ ;
      /**
       * <code>optional sint32 coin = 7;</code>
       *
       * <pre>
       *金币 普通场
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 coin = 7;</code>
       *
       * <pre>
       *金币 普通场
       * </pre>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <code>optional sint32 coin = 7;</code>
       *
       * <pre>
       *金币 普通场
       * </pre>
       */
      public Builder setCoin(int value) {
        bitField0_ |= 0x00000020;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 coin = 7;</code>
       *
       * <pre>
       *金币 普通场
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        coin_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 score = 8;
      private int score_ ;
      /**
       * <code>optional sint32 score = 8;</code>
       *
       * <pre>
       *积分 vip场
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 score = 8;</code>
       *
       * <pre>
       *积分 vip场
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional sint32 score = 8;</code>
       *
       * <pre>
       *积分 vip场
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000040;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 score = 8;</code>
       *
       * <pre>
       *积分 vip场
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperPlayerSettle)
    }

    static {
      defaultInstance = new GameOperPlayerSettle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperPlayerSettle)
  }

  public interface GameOperFinalSettleSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string settleDate = 1;
    /**
     * <code>optional string settleDate = 1;</code>
     */
    boolean hasSettleDate();
    /**
     * <code>optional string settleDate = 1;</code>
     */
    java.lang.String getSettleDate();
    /**
     * <code>optional string settleDate = 1;</code>
     */
    com.google.protobuf.ByteString
        getSettleDateBytes();

    // repeated .packet.mj.PlayerFinalResult detail = 2;
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    java.util.List<packet.mj.MJ.PlayerFinalResult> 
        getDetailList();
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    packet.mj.MJ.PlayerFinalResult getDetail(int index);
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    int getDetailCount();
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    java.util.List<? extends packet.mj.MJ.PlayerFinalResultOrBuilder> 
        getDetailOrBuilderList();
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    packet.mj.MJ.PlayerFinalResultOrBuilder getDetailOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code packet.mj.GameOperFinalSettleSyn}
   */
  public static final class GameOperFinalSettleSyn extends
      com.google.protobuf.GeneratedMessage
      implements GameOperFinalSettleSynOrBuilder {
    // Use GameOperFinalSettleSyn.newBuilder() to construct.
    private GameOperFinalSettleSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOperFinalSettleSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOperFinalSettleSyn defaultInstance;
    public static GameOperFinalSettleSyn getDefaultInstance() {
      return defaultInstance;
    }

    public GameOperFinalSettleSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOperFinalSettleSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              settleDate_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                detail_ = new java.util.ArrayList<packet.mj.MJ.PlayerFinalResult>();
                mutable_bitField0_ |= 0x00000002;
              }
              detail_.add(input.readMessage(packet.mj.MJ.PlayerFinalResult.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          detail_ = java.util.Collections.unmodifiableList(detail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperFinalSettleSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_GameOperFinalSettleSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.GameOperFinalSettleSyn.class, packet.mj.MJ.GameOperFinalSettleSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOperFinalSettleSyn> PARSER =
        new com.google.protobuf.AbstractParser<GameOperFinalSettleSyn>() {
      public GameOperFinalSettleSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOperFinalSettleSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOperFinalSettleSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string settleDate = 1;
    public static final int SETTLEDATE_FIELD_NUMBER = 1;
    private java.lang.Object settleDate_;
    /**
     * <code>optional string settleDate = 1;</code>
     */
    public boolean hasSettleDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string settleDate = 1;</code>
     */
    public java.lang.String getSettleDate() {
      java.lang.Object ref = settleDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          settleDate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string settleDate = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSettleDateBytes() {
      java.lang.Object ref = settleDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        settleDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .packet.mj.PlayerFinalResult detail = 2;
    public static final int DETAIL_FIELD_NUMBER = 2;
    private java.util.List<packet.mj.MJ.PlayerFinalResult> detail_;
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    public java.util.List<packet.mj.MJ.PlayerFinalResult> getDetailList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    public java.util.List<? extends packet.mj.MJ.PlayerFinalResultOrBuilder> 
        getDetailOrBuilderList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    public int getDetailCount() {
      return detail_.size();
    }
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    public packet.mj.MJ.PlayerFinalResult getDetail(int index) {
      return detail_.get(index);
    }
    /**
     * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
     */
    public packet.mj.MJ.PlayerFinalResultOrBuilder getDetailOrBuilder(
        int index) {
      return detail_.get(index);
    }

    private void initFields() {
      settleDate_ = "";
      detail_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSettleDateBytes());
      }
      for (int i = 0; i < detail_.size(); i++) {
        output.writeMessage(2, detail_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSettleDateBytes());
      }
      for (int i = 0; i < detail_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, detail_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.GameOperFinalSettleSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.GameOperFinalSettleSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.GameOperFinalSettleSyn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.GameOperFinalSettleSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperFinalSettleSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperFinalSettleSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.GameOperFinalSettleSyn.class, packet.mj.MJ.GameOperFinalSettleSyn.Builder.class);
      }

      // Construct using packet.mj.MJ.GameOperFinalSettleSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        settleDate_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          detailBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_GameOperFinalSettleSyn_descriptor;
      }

      public packet.mj.MJ.GameOperFinalSettleSyn getDefaultInstanceForType() {
        return packet.mj.MJ.GameOperFinalSettleSyn.getDefaultInstance();
      }

      public packet.mj.MJ.GameOperFinalSettleSyn build() {
        packet.mj.MJ.GameOperFinalSettleSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.GameOperFinalSettleSyn buildPartial() {
        packet.mj.MJ.GameOperFinalSettleSyn result = new packet.mj.MJ.GameOperFinalSettleSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.settleDate_ = settleDate_;
        if (detailBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            detail_ = java.util.Collections.unmodifiableList(detail_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.GameOperFinalSettleSyn) {
          return mergeFrom((packet.mj.MJ.GameOperFinalSettleSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.GameOperFinalSettleSyn other) {
        if (other == packet.mj.MJ.GameOperFinalSettleSyn.getDefaultInstance()) return this;
        if (other.hasSettleDate()) {
          bitField0_ |= 0x00000001;
          settleDate_ = other.settleDate_;
          onChanged();
        }
        if (detailBuilder_ == null) {
          if (!other.detail_.isEmpty()) {
            if (detail_.isEmpty()) {
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDetailIsMutable();
              detail_.addAll(other.detail_);
            }
            onChanged();
          }
        } else {
          if (!other.detail_.isEmpty()) {
            if (detailBuilder_.isEmpty()) {
              detailBuilder_.dispose();
              detailBuilder_ = null;
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000002);
              detailBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailFieldBuilder() : null;
            } else {
              detailBuilder_.addAllMessages(other.detail_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.GameOperFinalSettleSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.GameOperFinalSettleSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string settleDate = 1;
      private java.lang.Object settleDate_ = "";
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public boolean hasSettleDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public java.lang.String getSettleDate() {
        java.lang.Object ref = settleDate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          settleDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSettleDateBytes() {
        java.lang.Object ref = settleDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          settleDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public Builder setSettleDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        settleDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public Builder clearSettleDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        settleDate_ = getDefaultInstance().getSettleDate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string settleDate = 1;</code>
       */
      public Builder setSettleDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        settleDate_ = value;
        onChanged();
        return this;
      }

      // repeated .packet.mj.PlayerFinalResult detail = 2;
      private java.util.List<packet.mj.MJ.PlayerFinalResult> detail_ =
        java.util.Collections.emptyList();
      private void ensureDetailIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          detail_ = new java.util.ArrayList<packet.mj.MJ.PlayerFinalResult>(detail_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.PlayerFinalResult, packet.mj.MJ.PlayerFinalResult.Builder, packet.mj.MJ.PlayerFinalResultOrBuilder> detailBuilder_;

      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public java.util.List<packet.mj.MJ.PlayerFinalResult> getDetailList() {
        if (detailBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detail_);
        } else {
          return detailBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public int getDetailCount() {
        if (detailBuilder_ == null) {
          return detail_.size();
        } else {
          return detailBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public packet.mj.MJ.PlayerFinalResult getDetail(int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);
        } else {
          return detailBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder setDetail(
          int index, packet.mj.MJ.PlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.set(index, value);
          onChanged();
        } else {
          detailBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder setDetail(
          int index, packet.mj.MJ.PlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder addDetail(packet.mj.MJ.PlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(value);
          onChanged();
        } else {
          detailBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder addDetail(
          int index, packet.mj.MJ.PlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(index, value);
          onChanged();
        } else {
          detailBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder addDetail(
          packet.mj.MJ.PlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder addDetail(
          int index, packet.mj.MJ.PlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder addAllDetail(
          java.lang.Iterable<? extends packet.mj.MJ.PlayerFinalResult> values) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          super.addAll(values, detail_);
          onChanged();
        } else {
          detailBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          detailBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public Builder removeDetail(int index) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.remove(index);
          onChanged();
        } else {
          detailBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public packet.mj.MJ.PlayerFinalResult.Builder getDetailBuilder(
          int index) {
        return getDetailFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public packet.mj.MJ.PlayerFinalResultOrBuilder getDetailOrBuilder(
          int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);  } else {
          return detailBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public java.util.List<? extends packet.mj.MJ.PlayerFinalResultOrBuilder> 
           getDetailOrBuilderList() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detail_);
        }
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public packet.mj.MJ.PlayerFinalResult.Builder addDetailBuilder() {
        return getDetailFieldBuilder().addBuilder(
            packet.mj.MJ.PlayerFinalResult.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public packet.mj.MJ.PlayerFinalResult.Builder addDetailBuilder(
          int index) {
        return getDetailFieldBuilder().addBuilder(
            index, packet.mj.MJ.PlayerFinalResult.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.mj.PlayerFinalResult detail = 2;</code>
       */
      public java.util.List<packet.mj.MJ.PlayerFinalResult.Builder> 
           getDetailBuilderList() {
        return getDetailFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.mj.MJ.PlayerFinalResult, packet.mj.MJ.PlayerFinalResult.Builder, packet.mj.MJ.PlayerFinalResultOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.mj.MJ.PlayerFinalResult, packet.mj.MJ.PlayerFinalResult.Builder, packet.mj.MJ.PlayerFinalResultOrBuilder>(
                  detail_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.GameOperFinalSettleSyn)
    }

    static {
      defaultInstance = new GameOperFinalSettleSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.GameOperFinalSettleSyn)
  }

  public interface PlayerFinalResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint64 playerId = 1;
    /**
     * <code>optional sint64 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>optional sint64 playerId = 1;</code>
     */
    long getPlayerId();

    // optional string playerName = 2;
    /**
     * <code>optional string playerName = 2;</code>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string playerName = 2;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string playerName = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    // optional sint32 position = 3;
    /**
     * <code>optional sint32 position = 3;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional sint32 position = 3;</code>
     */
    int getPosition();

    // optional string headImage = 4;
    /**
     * <code>optional string headImage = 4;</code>
     */
    boolean hasHeadImage();
    /**
     * <code>optional string headImage = 4;</code>
     */
    java.lang.String getHeadImage();
    /**
     * <code>optional string headImage = 4;</code>
     */
    com.google.protobuf.ByteString
        getHeadImageBytes();

    // optional sint32 score = 5;
    /**
     * <code>optional sint32 score = 5;</code>
     */
    boolean hasScore();
    /**
     * <code>optional sint32 score = 5;</code>
     */
    int getScore();

    // optional sint32 bankerCount = 6;
    /**
     * <code>optional sint32 bankerCount = 6;</code>
     */
    boolean hasBankerCount();
    /**
     * <code>optional sint32 bankerCount = 6;</code>
     */
    int getBankerCount();

    // optional sint32 huCount = 7;
    /**
     * <code>optional sint32 huCount = 7;</code>
     */
    boolean hasHuCount();
    /**
     * <code>optional sint32 huCount = 7;</code>
     */
    int getHuCount();

    // optional sint32 paoCount = 8;
    /**
     * <code>optional sint32 paoCount = 8;</code>
     */
    boolean hasPaoCount();
    /**
     * <code>optional sint32 paoCount = 8;</code>
     */
    int getPaoCount();

    // optional sint32 moBaoCount = 9;
    /**
     * <code>optional sint32 moBaoCount = 9;</code>
     */
    boolean hasMoBaoCount();
    /**
     * <code>optional sint32 moBaoCount = 9;</code>
     */
    int getMoBaoCount();

    // optional sint32 baoZhongBaoCount = 10;
    /**
     * <code>optional sint32 baoZhongBaoCount = 10;</code>
     */
    boolean hasBaoZhongBaoCount();
    /**
     * <code>optional sint32 baoZhongBaoCount = 10;</code>
     */
    int getBaoZhongBaoCount();

    // optional sint32 kaiPaiZhaCount = 11;
    /**
     * <code>optional sint32 kaiPaiZhaCount = 11;</code>
     */
    boolean hasKaiPaiZhaCount();
    /**
     * <code>optional sint32 kaiPaiZhaCount = 11;</code>
     */
    int getKaiPaiZhaCount();

    // optional bool roomOwner = 12;
    /**
     * <code>optional bool roomOwner = 12;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    boolean hasRoomOwner();
    /**
     * <code>optional bool roomOwner = 12;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    boolean getRoomOwner();
  }
  /**
   * Protobuf type {@code packet.mj.PlayerFinalResult}
   */
  public static final class PlayerFinalResult extends
      com.google.protobuf.GeneratedMessage
      implements PlayerFinalResultOrBuilder {
    // Use PlayerFinalResult.newBuilder() to construct.
    private PlayerFinalResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerFinalResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerFinalResult defaultInstance;
    public static PlayerFinalResult getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerFinalResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerFinalResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readSInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              playerName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              position_ = input.readSInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              headImage_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              score_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              bankerCount_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              huCount_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              paoCount_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              moBaoCount_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              baoZhongBaoCount_ = input.readSInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              kaiPaiZhaCount_ = input.readSInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              roomOwner_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.mj.MJ.internal_static_packet_mj_PlayerFinalResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.mj.MJ.internal_static_packet_mj_PlayerFinalResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.mj.MJ.PlayerFinalResult.class, packet.mj.MJ.PlayerFinalResult.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerFinalResult> PARSER =
        new com.google.protobuf.AbstractParser<PlayerFinalResult>() {
      public PlayerFinalResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerFinalResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerFinalResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional sint64 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 playerId = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // optional string playerName = 2;
    public static final int PLAYERNAME_FIELD_NUMBER = 2;
    private java.lang.Object playerName_;
    /**
     * <code>optional string playerName = 2;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string playerName = 2;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional sint32 position = 3;
    public static final int POSITION_FIELD_NUMBER = 3;
    private int position_;
    /**
     * <code>optional sint32 position = 3;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 position = 3;</code>
     */
    public int getPosition() {
      return position_;
    }

    // optional string headImage = 4;
    public static final int HEADIMAGE_FIELD_NUMBER = 4;
    private java.lang.Object headImage_;
    /**
     * <code>optional string headImage = 4;</code>
     */
    public boolean hasHeadImage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string headImage = 4;</code>
     */
    public java.lang.String getHeadImage() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headImage = 4;</code>
     */
    public com.google.protobuf.ByteString
        getHeadImageBytes() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional sint32 score = 5;
    public static final int SCORE_FIELD_NUMBER = 5;
    private int score_;
    /**
     * <code>optional sint32 score = 5;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 score = 5;</code>
     */
    public int getScore() {
      return score_;
    }

    // optional sint32 bankerCount = 6;
    public static final int BANKERCOUNT_FIELD_NUMBER = 6;
    private int bankerCount_;
    /**
     * <code>optional sint32 bankerCount = 6;</code>
     */
    public boolean hasBankerCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 bankerCount = 6;</code>
     */
    public int getBankerCount() {
      return bankerCount_;
    }

    // optional sint32 huCount = 7;
    public static final int HUCOUNT_FIELD_NUMBER = 7;
    private int huCount_;
    /**
     * <code>optional sint32 huCount = 7;</code>
     */
    public boolean hasHuCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 huCount = 7;</code>
     */
    public int getHuCount() {
      return huCount_;
    }

    // optional sint32 paoCount = 8;
    public static final int PAOCOUNT_FIELD_NUMBER = 8;
    private int paoCount_;
    /**
     * <code>optional sint32 paoCount = 8;</code>
     */
    public boolean hasPaoCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 paoCount = 8;</code>
     */
    public int getPaoCount() {
      return paoCount_;
    }

    // optional sint32 moBaoCount = 9;
    public static final int MOBAOCOUNT_FIELD_NUMBER = 9;
    private int moBaoCount_;
    /**
     * <code>optional sint32 moBaoCount = 9;</code>
     */
    public boolean hasMoBaoCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 moBaoCount = 9;</code>
     */
    public int getMoBaoCount() {
      return moBaoCount_;
    }

    // optional sint32 baoZhongBaoCount = 10;
    public static final int BAOZHONGBAOCOUNT_FIELD_NUMBER = 10;
    private int baoZhongBaoCount_;
    /**
     * <code>optional sint32 baoZhongBaoCount = 10;</code>
     */
    public boolean hasBaoZhongBaoCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint32 baoZhongBaoCount = 10;</code>
     */
    public int getBaoZhongBaoCount() {
      return baoZhongBaoCount_;
    }

    // optional sint32 kaiPaiZhaCount = 11;
    public static final int KAIPAIZHACOUNT_FIELD_NUMBER = 11;
    private int kaiPaiZhaCount_;
    /**
     * <code>optional sint32 kaiPaiZhaCount = 11;</code>
     */
    public boolean hasKaiPaiZhaCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint32 kaiPaiZhaCount = 11;</code>
     */
    public int getKaiPaiZhaCount() {
      return kaiPaiZhaCount_;
    }

    // optional bool roomOwner = 12;
    public static final int ROOMOWNER_FIELD_NUMBER = 12;
    private boolean roomOwner_;
    /**
     * <code>optional bool roomOwner = 12;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    public boolean hasRoomOwner() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool roomOwner = 12;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    public boolean getRoomOwner() {
      return roomOwner_;
    }

    private void initFields() {
      playerId_ = 0L;
      playerName_ = "";
      position_ = 0;
      headImage_ = "";
      score_ = 0;
      bankerCount_ = 0;
      huCount_ = 0;
      paoCount_ = 0;
      moBaoCount_ = 0;
      baoZhongBaoCount_ = 0;
      kaiPaiZhaCount_ = 0;
      roomOwner_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, score_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, bankerCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, huCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, paoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(9, moBaoCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(10, baoZhongBaoCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt32(11, kaiPaiZhaCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, roomOwner_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, score_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, bankerCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, huCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, paoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, moBaoCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, baoZhongBaoCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, kaiPaiZhaCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, roomOwner_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.PlayerFinalResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.mj.MJ.PlayerFinalResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.mj.MJ.PlayerFinalResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.mj.MJ.PlayerFinalResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.mj.PlayerFinalResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.mj.MJ.PlayerFinalResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.mj.MJ.internal_static_packet_mj_PlayerFinalResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.mj.MJ.internal_static_packet_mj_PlayerFinalResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.mj.MJ.PlayerFinalResult.class, packet.mj.MJ.PlayerFinalResult.Builder.class);
      }

      // Construct using packet.mj.MJ.PlayerFinalResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        headImage_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        bankerCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        huCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        paoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        moBaoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        baoZhongBaoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        kaiPaiZhaCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        roomOwner_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.mj.MJ.internal_static_packet_mj_PlayerFinalResult_descriptor;
      }

      public packet.mj.MJ.PlayerFinalResult getDefaultInstanceForType() {
        return packet.mj.MJ.PlayerFinalResult.getDefaultInstance();
      }

      public packet.mj.MJ.PlayerFinalResult build() {
        packet.mj.MJ.PlayerFinalResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.mj.MJ.PlayerFinalResult buildPartial() {
        packet.mj.MJ.PlayerFinalResult result = new packet.mj.MJ.PlayerFinalResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.headImage_ = headImage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bankerCount_ = bankerCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huCount_ = huCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.paoCount_ = paoCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.moBaoCount_ = moBaoCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.baoZhongBaoCount_ = baoZhongBaoCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.kaiPaiZhaCount_ = kaiPaiZhaCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roomOwner_ = roomOwner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.mj.MJ.PlayerFinalResult) {
          return mergeFrom((packet.mj.MJ.PlayerFinalResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.mj.MJ.PlayerFinalResult other) {
        if (other == packet.mj.MJ.PlayerFinalResult.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000002;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasHeadImage()) {
          bitField0_ |= 0x00000008;
          headImage_ = other.headImage_;
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasBankerCount()) {
          setBankerCount(other.getBankerCount());
        }
        if (other.hasHuCount()) {
          setHuCount(other.getHuCount());
        }
        if (other.hasPaoCount()) {
          setPaoCount(other.getPaoCount());
        }
        if (other.hasMoBaoCount()) {
          setMoBaoCount(other.getMoBaoCount());
        }
        if (other.hasBaoZhongBaoCount()) {
          setBaoZhongBaoCount(other.getBaoZhongBaoCount());
        }
        if (other.hasKaiPaiZhaCount()) {
          setKaiPaiZhaCount(other.getKaiPaiZhaCount());
        }
        if (other.hasRoomOwner()) {
          setRoomOwner(other.getRoomOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.mj.MJ.PlayerFinalResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.mj.MJ.PlayerFinalResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint64 playerId = 1;
      private long playerId_ ;
      /**
       * <code>optional sint64 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // optional string playerName = 2;
      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string playerName = 2;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string playerName = 2;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerName = 2;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 2;</code>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 2;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
        return this;
      }

      // optional sint32 position = 3;
      private int position_ ;
      /**
       * <code>optional sint32 position = 3;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 position = 3;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional sint32 position = 3;</code>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000004;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 position = 3;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional string headImage = 4;
      private java.lang.Object headImage_ = "";
      /**
       * <code>optional string headImage = 4;</code>
       */
      public boolean hasHeadImage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string headImage = 4;</code>
       */
      public java.lang.String getHeadImage() {
        java.lang.Object ref = headImage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headImage = 4;</code>
       */
      public com.google.protobuf.ByteString
          getHeadImageBytes() {
        java.lang.Object ref = headImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headImage = 4;</code>
       */
      public Builder setHeadImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 4;</code>
       */
      public Builder clearHeadImage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        headImage_ = getDefaultInstance().getHeadImage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 4;</code>
       */
      public Builder setHeadImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headImage_ = value;
        onChanged();
        return this;
      }

      // optional sint32 score = 5;
      private int score_ ;
      /**
       * <code>optional sint32 score = 5;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 score = 5;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional sint32 score = 5;</code>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000010;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 score = 5;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 bankerCount = 6;
      private int bankerCount_ ;
      /**
       * <code>optional sint32 bankerCount = 6;</code>
       */
      public boolean hasBankerCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 bankerCount = 6;</code>
       */
      public int getBankerCount() {
        return bankerCount_;
      }
      /**
       * <code>optional sint32 bankerCount = 6;</code>
       */
      public Builder setBankerCount(int value) {
        bitField0_ |= 0x00000020;
        bankerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 bankerCount = 6;</code>
       */
      public Builder clearBankerCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bankerCount_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 huCount = 7;
      private int huCount_ ;
      /**
       * <code>optional sint32 huCount = 7;</code>
       */
      public boolean hasHuCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 huCount = 7;</code>
       */
      public int getHuCount() {
        return huCount_;
      }
      /**
       * <code>optional sint32 huCount = 7;</code>
       */
      public Builder setHuCount(int value) {
        bitField0_ |= 0x00000040;
        huCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 huCount = 7;</code>
       */
      public Builder clearHuCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        huCount_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 paoCount = 8;
      private int paoCount_ ;
      /**
       * <code>optional sint32 paoCount = 8;</code>
       */
      public boolean hasPaoCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 paoCount = 8;</code>
       */
      public int getPaoCount() {
        return paoCount_;
      }
      /**
       * <code>optional sint32 paoCount = 8;</code>
       */
      public Builder setPaoCount(int value) {
        bitField0_ |= 0x00000080;
        paoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 paoCount = 8;</code>
       */
      public Builder clearPaoCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        paoCount_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 moBaoCount = 9;
      private int moBaoCount_ ;
      /**
       * <code>optional sint32 moBaoCount = 9;</code>
       */
      public boolean hasMoBaoCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 moBaoCount = 9;</code>
       */
      public int getMoBaoCount() {
        return moBaoCount_;
      }
      /**
       * <code>optional sint32 moBaoCount = 9;</code>
       */
      public Builder setMoBaoCount(int value) {
        bitField0_ |= 0x00000100;
        moBaoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 moBaoCount = 9;</code>
       */
      public Builder clearMoBaoCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        moBaoCount_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 baoZhongBaoCount = 10;
      private int baoZhongBaoCount_ ;
      /**
       * <code>optional sint32 baoZhongBaoCount = 10;</code>
       */
      public boolean hasBaoZhongBaoCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 baoZhongBaoCount = 10;</code>
       */
      public int getBaoZhongBaoCount() {
        return baoZhongBaoCount_;
      }
      /**
       * <code>optional sint32 baoZhongBaoCount = 10;</code>
       */
      public Builder setBaoZhongBaoCount(int value) {
        bitField0_ |= 0x00000200;
        baoZhongBaoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 baoZhongBaoCount = 10;</code>
       */
      public Builder clearBaoZhongBaoCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        baoZhongBaoCount_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 kaiPaiZhaCount = 11;
      private int kaiPaiZhaCount_ ;
      /**
       * <code>optional sint32 kaiPaiZhaCount = 11;</code>
       */
      public boolean hasKaiPaiZhaCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 kaiPaiZhaCount = 11;</code>
       */
      public int getKaiPaiZhaCount() {
        return kaiPaiZhaCount_;
      }
      /**
       * <code>optional sint32 kaiPaiZhaCount = 11;</code>
       */
      public Builder setKaiPaiZhaCount(int value) {
        bitField0_ |= 0x00000400;
        kaiPaiZhaCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 kaiPaiZhaCount = 11;</code>
       */
      public Builder clearKaiPaiZhaCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        kaiPaiZhaCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool roomOwner = 12;
      private boolean roomOwner_ ;
      /**
       * <code>optional bool roomOwner = 12;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public boolean hasRoomOwner() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool roomOwner = 12;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public boolean getRoomOwner() {
        return roomOwner_;
      }
      /**
       * <code>optional bool roomOwner = 12;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public Builder setRoomOwner(boolean value) {
        bitField0_ |= 0x00000800;
        roomOwner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool roomOwner = 12;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public Builder clearRoomOwner() {
        bitField0_ = (bitField0_ & ~0x00000800);
        roomOwner_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.mj.PlayerFinalResult)
    }

    static {
      defaultInstance = new PlayerFinalResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.mj.PlayerFinalResult)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperStartSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperStartSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperHandCardSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperHandCardSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperPublicInfoSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperPublicInfoSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperActorSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperActorSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperPlayerActionSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperPlayerActionSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperPlayerActionNotify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperPlayerActionNotify_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperAutoChuArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperAutoChuArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperChiArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperChiArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperBaoChangeSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperBaoChangeSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperPlayerHuSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperPlayerHuSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperPlayerSettle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperPlayerSettle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_GameOperFinalSettleSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_GameOperFinalSettleSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_mj_PlayerFinalResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_mj_PlayerFinalResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010MJ.proto\022\tpacket.mj\"\354\001\n\020GameOperStartS" +
      "yn\022\021\n\tbankerPos\030\001 \001(\021\022\023\n\013serviceGold\030\002 \002" +
      "(\021\0227\n\017playerHandCards\030\003 \003(\0132\036.packet.mj." +
      "GameOperHandCardSyn\022\017\n\007quanNum\030\004 \001(\021\022\026\n\016" +
      "bankerContinue\030\005 \001(\010\022\r\n\005dice1\030\006 \001(\021\022\r\n\005d" +
      "ice2\030\007 \001(\021\022\013\n\003seq\030\010 \001(\021\022\021\n\treconnect\030\t \001" +
      "(\010\022\020\n\010cardLeft\030\014 \001(\021\"b\n\023GameOperHandCard" +
      "Syn\022\020\n\010position\030\001 \002(\021\022\021\n\thandCards\030\002 \003(\021" +
      "\022\021\n\tdownCards\030\003 \003(\021\022\023\n\013cardsBefore\030\004 \003(\021" +
      "\")\n\025GameOperPublicInfoSyn\022\020\n\010cardLeft\030\001 ",
      "\002(\021\"6\n\020GameOperActorSyn\022\020\n\010position\030\001 \002(" +
      "\021\022\020\n\010timeLeft\030\002 \002(\021\"[\n\027GameOperPlayerAct" +
      "ionSyn\022\020\n\010position\030\001 \002(\021\022\016\n\006action\030\002 \002(\021" +
      "\022\021\n\tcardValue\030\003 \003(\021\022\013\n\003seq\030\005 \001(\021\"\226\002\n\032Gam" +
      "eOperPlayerActionNotify\022\020\n\010position\030\001 \002(" +
      "\021\022\017\n\007actions\030\002 \002(\021\022\017\n\007newCard\030\003 \001(\021\022\020\n\010t" +
      "ingList\030\004 \003(\021\022\020\n\010gangList\030\005 \003(\021\022\017\n\007tingD" +
      "zs\030\006 \003(\021\022)\n\006chiArg\030\007 \003(\0132\031.packet.mj.Gam" +
      "eOperChiArg\022\017\n\007pengArg\030\010 \001(\021\022\032\n\022lastActi" +
      "onPosition\030\t \001(\021\022\026\n\016lastActionCard\030\n \001(\021",
      "\022\022\n\nmustZhiDui\030\013 \001(\021\022\013\n\003seq\030d \001(\021\"\"\n\022Gam" +
      "eOperAutoChuArg\022\014\n\004card\030\001 \002(\021\"F\n\016GameOpe" +
      "rChiArg\022\017\n\007myCard1\030\001 \002(\021\022\017\n\007myCard2\030\002 \002(" +
      "\021\022\022\n\ntargetCard\030\003 \002(\021\"F\n\024GameOperBaoChan" +
      "geSyn\022\016\n\006oldBao\030\001 \002(\021\022\020\n\010position\030\002 \001(\021\022" +
      "\014\n\004dice\030\003 \001(\021\"\303\001\n\023GameOperPlayerHuSyn\022\020\n" +
      "\010position\030\001 \002(\021\022\014\n\004card\030\002 \001(\021\022\013\n\003bao\030\003 \001" +
      "(\021\022/\n\006detail\030\004 \003(\0132\037.packet.mj.GameOperP" +
      "layerSettle\022\022\n\nresultType\030\005 \001(\021\022\023\n\013paoPo" +
      "sition\030\006 \001(\021\022\024\n\014skipHuSettle\030\007 \001(\010\022\017\n\007wi",
      "nType\030\010 \001(\021\"\213\001\n\024GameOperPlayerSettle\022\020\n\010" +
      "position\030\001 \001(\021\022\020\n\010handcard\030\002 \003(\021\022\017\n\007fanT" +
      "ype\030\004 \001(\021\022\016\n\006fanNum\030\005 \001(\021\022\021\n\tfanDetail\030\006" +
      " \003(\t\022\014\n\004coin\030\007 \001(\021\022\r\n\005score\030\010 \001(\021\"Z\n\026Gam" +
      "eOperFinalSettleSyn\022\022\n\nsettleDate\030\001 \001(\t\022" +
      ",\n\006detail\030\002 \003(\0132\034.packet.mj.PlayerFinalR" +
      "esult\"\376\001\n\021PlayerFinalResult\022\020\n\010playerId\030" +
      "\001 \001(\022\022\022\n\nplayerName\030\002 \001(\t\022\020\n\010position\030\003 " +
      "\001(\021\022\021\n\theadImage\030\004 \001(\t\022\r\n\005score\030\005 \001(\021\022\023\n" +
      "\013bankerCount\030\006 \001(\021\022\017\n\007huCount\030\007 \001(\021\022\020\n\010p",
      "aoCount\030\010 \001(\021\022\022\n\nmoBaoCount\030\t \001(\021\022\030\n\020bao" +
      "ZhongBaoCount\030\n \001(\021\022\026\n\016kaiPaiZhaCount\030\013 " +
      "\001(\021\022\021\n\troomOwner\030\014 \001(\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_packet_mj_GameOperStartSyn_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_packet_mj_GameOperStartSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperStartSyn_descriptor,
              new java.lang.String[] { "BankerPos", "ServiceGold", "PlayerHandCards", "QuanNum", "BankerContinue", "Dice1", "Dice2", "Seq", "Reconnect", "CardLeft", });
          internal_static_packet_mj_GameOperHandCardSyn_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_packet_mj_GameOperHandCardSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperHandCardSyn_descriptor,
              new java.lang.String[] { "Position", "HandCards", "DownCards", "CardsBefore", });
          internal_static_packet_mj_GameOperPublicInfoSyn_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_packet_mj_GameOperPublicInfoSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperPublicInfoSyn_descriptor,
              new java.lang.String[] { "CardLeft", });
          internal_static_packet_mj_GameOperActorSyn_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_packet_mj_GameOperActorSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperActorSyn_descriptor,
              new java.lang.String[] { "Position", "TimeLeft", });
          internal_static_packet_mj_GameOperPlayerActionSyn_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_packet_mj_GameOperPlayerActionSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperPlayerActionSyn_descriptor,
              new java.lang.String[] { "Position", "Action", "CardValue", "Seq", });
          internal_static_packet_mj_GameOperPlayerActionNotify_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_packet_mj_GameOperPlayerActionNotify_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperPlayerActionNotify_descriptor,
              new java.lang.String[] { "Position", "Actions", "NewCard", "TingList", "GangList", "TingDzs", "ChiArg", "PengArg", "LastActionPosition", "LastActionCard", "MustZhiDui", "Seq", });
          internal_static_packet_mj_GameOperAutoChuArg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_packet_mj_GameOperAutoChuArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperAutoChuArg_descriptor,
              new java.lang.String[] { "Card", });
          internal_static_packet_mj_GameOperChiArg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_packet_mj_GameOperChiArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperChiArg_descriptor,
              new java.lang.String[] { "MyCard1", "MyCard2", "TargetCard", });
          internal_static_packet_mj_GameOperBaoChangeSyn_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_packet_mj_GameOperBaoChangeSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperBaoChangeSyn_descriptor,
              new java.lang.String[] { "OldBao", "Position", "Dice", });
          internal_static_packet_mj_GameOperPlayerHuSyn_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_packet_mj_GameOperPlayerHuSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperPlayerHuSyn_descriptor,
              new java.lang.String[] { "Position", "Card", "Bao", "Detail", "ResultType", "PaoPosition", "SkipHuSettle", "WinType", });
          internal_static_packet_mj_GameOperPlayerSettle_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_packet_mj_GameOperPlayerSettle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperPlayerSettle_descriptor,
              new java.lang.String[] { "Position", "Handcard", "FanType", "FanNum", "FanDetail", "Coin", "Score", });
          internal_static_packet_mj_GameOperFinalSettleSyn_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_packet_mj_GameOperFinalSettleSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_GameOperFinalSettleSyn_descriptor,
              new java.lang.String[] { "SettleDate", "Detail", });
          internal_static_packet_mj_PlayerFinalResult_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_packet_mj_PlayerFinalResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_mj_PlayerFinalResult_descriptor,
              new java.lang.String[] { "PlayerId", "PlayerName", "Position", "HeadImage", "Score", "BankerCount", "HuCount", "PaoCount", "MoBaoCount", "BaoZhongBaoCount", "KaiPaiZhaCount", "RoomOwner", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
